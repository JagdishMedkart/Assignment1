{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 63, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Medkart/Project1/Assignment1/online-product-management/prisma/client.ts"],"sourcesContent":["import { PrismaClient } from \"@prisma/client\";\r\n\r\nconst globalForPrisma = global as unknown as { prisma?: PrismaClient };\r\n\r\nconst prisma = globalForPrisma.prisma || new PrismaClient();\r\n\r\nif (process.env.NODE_ENV !== \"production\") globalForPrisma.prisma = prisma;\r\n\r\nexport default prisma;\r\n"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,kBAAkB;AAExB,MAAM,SAAS,gBAAgB,MAAM,IAAI,IAAI,6HAAA,CAAA,eAAY;AAEzD,wCAA2C,gBAAgB,MAAM,GAAG;uCAErD"}},
    {"offset": {"line": 72, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 78, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Medkart/Project1/Assignment1/online-product-management/src/app/api/admin/orders/%5Bid%5D/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from \"next/server\";\r\nimport prisma from \"../../../../../../prisma/client\";\r\n\r\nexport async function PATCH(req: NextRequest, { params }: { params: { id: string } }) {\r\n  try {\r\n    const { id } = params;\r\n    const { status, paymentStatus } = await req.json();\r\n\r\n    const updatedOrder = await prisma.order.update({\r\n      where: { orderId: Number(id) },\r\n      data: { status, paymentStatus },\r\n    });\r\n\r\n    return NextResponse.json(\r\n      { message: \"Order updated successfully\", order: updatedOrder },\r\n      { status: 200 }\r\n    );\r\n  } catch (error) {\r\n    console.error(\"Error updating order:\", error);\r\n    return NextResponse.json(\r\n      { message: \"Internal server error\", success: false },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}\r\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,eAAe,MAAM,GAAgB,EAAE,EAAE,MAAM,EAA8B;IAClF,IAAI;QACF,MAAM,EAAE,EAAE,EAAE,GAAG;QACf,MAAM,EAAE,MAAM,EAAE,aAAa,EAAE,GAAG,MAAM,IAAI,IAAI;QAEhD,MAAM,eAAe,MAAM,kHAAA,CAAA,UAAM,CAAC,KAAK,CAAC,MAAM,CAAC;YAC7C,OAAO;gBAAE,SAAS,OAAO;YAAI;YAC7B,MAAM;gBAAE;gBAAQ;YAAc;QAChC;QAEA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,SAAS;YAA8B,OAAO;QAAa,GAC7D;YAAE,QAAQ;QAAI;IAElB,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,yBAAyB;QACvC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,SAAS;YAAyB,SAAS;QAAM,GACnD;YAAE,QAAQ;QAAI;IAElB;AACF"}},
    {"offset": {"line": 114, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}