{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 63, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/HP/Assignment1/online-product-management/prisma/client.ts"],"sourcesContent":["import { PrismaClient } from \"@prisma/client\";\r\n\r\nconst globalForPrisma = global as unknown as { prisma?: PrismaClient };\r\n\r\nconst prisma = globalForPrisma.prisma || new PrismaClient();\r\n\r\nif (process.env.NODE_ENV !== \"production\") globalForPrisma.prisma = prisma;\r\n\r\nexport default prisma;\r\n"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,kBAAkB;AAExB,MAAM,SAAS,gBAAgB,MAAM,IAAI,IAAI,6HAAA,CAAA,eAAY;AAEzD,wCAA2C,gBAAgB,MAAM,GAAG;uCAErD"}},
    {"offset": {"line": 72, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 78, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/HP/Assignment1/online-product-management/src/app/api/admin/orders/stats/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from \"next/server\";\r\nimport prisma from \"../../../../../../prisma/client\";\r\n\r\nexport async function GET(req: NextRequest) {\r\n  try {\r\n    const today = new Date();\r\n    today.setHours(0, 0, 0, 0);\r\n\r\n    const ordersToday = await prisma.order.count({\r\n      where: { createdAt: { gte: today } },\r\n    });\r\n\r\n    const pendingOrders = await prisma.order.count({\r\n      where: { status: \"PENDING\" },\r\n    });\r\n\r\n    const totalSalesToday = await prisma.order.aggregate({\r\n      _sum: { totalAmount: true },\r\n      where: { createdAt: { gte: today }, paymentStatus: \"COMPLETED\" },\r\n    });\r\n\r\n    const pendingPayments = await prisma.order.aggregate({\r\n      _sum: { totalAmount: true },\r\n      where: { paymentStatus: \"PENDING\" },\r\n    });\r\n\r\n    const mostPurchasedProduct = await prisma.orderItem.groupBy({\r\n      by: [\"productWsCode\"],\r\n      _sum: { quantity: true },\r\n      orderBy: { _sum: { quantity: \"desc\" } },\r\n      take: 1,\r\n    });\r\n\r\n    const productDetails =\r\n      mostPurchasedProduct.length > 0\r\n        ? await prisma.product.findUnique({\r\n            where: { wsCode: mostPurchasedProduct[0].productWsCode },\r\n          })\r\n        : null;\r\n\r\n    return NextResponse.json(\r\n      {\r\n        message: \"Dashboard stats fetched successfully\",\r\n        stats: {\r\n          ordersToday,\r\n          pendingOrders,\r\n          totalSalesToday: totalSalesToday._sum.totalAmount || 0,\r\n          pendingPayments: pendingPayments._sum.totalAmount || 0,\r\n          mostPurchasedProduct: productDetails\r\n            ? { name: productDetails.name, quantity: mostPurchasedProduct[0]._sum.quantity }\r\n            : null,\r\n        },\r\n      },\r\n      { status: 200 }\r\n    );\r\n  } catch (error) {\r\n    console.error(\"Error fetching dashboard stats:\", error);\r\n    return NextResponse.json(\r\n      { message: \"Internal server error\", success: false },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}\r\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,eAAe,IAAI,GAAgB;IACxC,IAAI;QACF,MAAM,QAAQ,IAAI;QAClB,MAAM,QAAQ,CAAC,GAAG,GAAG,GAAG;QAExB,MAAM,cAAc,MAAM,kHAAA,CAAA,UAAM,CAAC,KAAK,CAAC,KAAK,CAAC;YAC3C,OAAO;gBAAE,WAAW;oBAAE,KAAK;gBAAM;YAAE;QACrC;QAEA,MAAM,gBAAgB,MAAM,kHAAA,CAAA,UAAM,CAAC,KAAK,CAAC,KAAK,CAAC;YAC7C,OAAO;gBAAE,QAAQ;YAAU;QAC7B;QAEA,MAAM,kBAAkB,MAAM,kHAAA,CAAA,UAAM,CAAC,KAAK,CAAC,SAAS,CAAC;YACnD,MAAM;gBAAE,aAAa;YAAK;YAC1B,OAAO;gBAAE,WAAW;oBAAE,KAAK;gBAAM;gBAAG,eAAe;YAAY;QACjE;QAEA,MAAM,kBAAkB,MAAM,kHAAA,CAAA,UAAM,CAAC,KAAK,CAAC,SAAS,CAAC;YACnD,MAAM;gBAAE,aAAa;YAAK;YAC1B,OAAO;gBAAE,eAAe;YAAU;QACpC;QAEA,MAAM,uBAAuB,MAAM,kHAAA,CAAA,UAAM,CAAC,SAAS,CAAC,OAAO,CAAC;YAC1D,IAAI;gBAAC;aAAgB;YACrB,MAAM;gBAAE,UAAU;YAAK;YACvB,SAAS;gBAAE,MAAM;oBAAE,UAAU;gBAAO;YAAE;YACtC,MAAM;QACR;QAEA,MAAM,iBACJ,qBAAqB,MAAM,GAAG,IAC1B,MAAM,kHAAA,CAAA,UAAM,CAAC,OAAO,CAAC,UAAU,CAAC;YAC9B,OAAO;gBAAE,QAAQ,oBAAoB,CAAC,EAAE,CAAC,aAAa;YAAC;QACzD,KACA;QAEN,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YACE,SAAS;YACT,OAAO;gBACL;gBACA;gBACA,iBAAiB,gBAAgB,IAAI,CAAC,WAAW,IAAI;gBACrD,iBAAiB,gBAAgB,IAAI,CAAC,WAAW,IAAI;gBACrD,sBAAsB,iBAClB;oBAAE,MAAM,eAAe,IAAI;oBAAE,UAAU,oBAAoB,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ;gBAAC,IAC7E;YACN;QACF,GACA;YAAE,QAAQ;QAAI;IAElB,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,mCAAmC;QACjD,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,SAAS;YAAyB,SAAS;QAAM,GACnD;YAAE,QAAQ;QAAI;IAElB;AACF"}},
    {"offset": {"line": 164, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}