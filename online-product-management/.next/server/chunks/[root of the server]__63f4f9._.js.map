{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 63, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Medkart/Project1/Assignment1/online-product-management/prisma/client.ts"],"sourcesContent":["import { PrismaClient } from \"@prisma/client\";\r\n\r\nconst globalForPrisma = global as unknown as { prisma?: PrismaClient };\r\n\r\nconst prisma = globalForPrisma.prisma || new PrismaClient();\r\n\r\nif (process.env.NODE_ENV !== \"production\") globalForPrisma.prisma = prisma;\r\n\r\nexport default prisma;\r\n"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,kBAAkB;AAExB,MAAM,SAAS,gBAAgB,MAAM,IAAI,IAAI,6HAAA,CAAA,eAAY;AAEzD,wCAA2C,gBAAgB,MAAM,GAAG;uCAErD"}},
    {"offset": {"line": 72, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 78, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Medkart/Project1/Assignment1/online-product-management/src/app/api/auth/logout/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from \"next/server\";\r\nimport prisma from \"../../../../../prisma/client\"\r\nimport { cookies } from \"next/headers\";\r\n\r\nexport async function POST(req: NextRequest) {\r\n  try {\r\n    // Retrieve the session token from the cookies\r\n    const sessionToken = req.cookies.get(\"session-us\")?.value;\r\n\r\n    if (!sessionToken) {\r\n      return NextResponse.json({ message: \"Not authenticated\", success: false }, { status: 401 });\r\n    }\r\n\r\n    // Delete the session from the database\r\n    await prisma.session.deleteMany({\r\n      where: {\r\n        sessionToken: sessionToken,\r\n      },\r\n    });\r\n\r\n    // Clear the cookie from the browser\r\n    (await cookies()).delete(\"session-us\");\r\n\r\n    return NextResponse.json({ message: \"Logged out successfully\", success: true }, { status: 200 });\r\n  } catch (error) {\r\n    console.error(\"Error during logout:\", error);\r\n    return NextResponse.json({ message: \"An error occurred\", success: false }, { status: 500 });\r\n  }\r\n}\r\n"],"names":[],"mappings":";;;AAAA;AACA;AACA;;;;AAEO,eAAe,KAAK,GAAgB;IACzC,IAAI;QACF,8CAA8C;QAC9C,MAAM,eAAe,IAAI,OAAO,CAAC,GAAG,CAAC,eAAe;QAEpD,IAAI,CAAC,cAAc;YACjB,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,SAAS;gBAAqB,SAAS;YAAM,GAAG;gBAAE,QAAQ;YAAI;QAC3F;QAEA,uCAAuC;QACvC,MAAM,kHAAA,CAAA,UAAM,CAAC,OAAO,CAAC,UAAU,CAAC;YAC9B,OAAO;gBACL,cAAc;YAChB;QACF;QAEA,oCAAoC;QACpC,CAAC,MAAM,CAAA,GAAA,iIAAA,CAAA,UAAO,AAAD,GAAG,EAAE,MAAM,CAAC;QAEzB,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,SAAS;YAA2B,SAAS;QAAK,GAAG;YAAE,QAAQ;QAAI;IAChG,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,wBAAwB;QACtC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,SAAS;YAAqB,SAAS;QAAM,GAAG;YAAE,QAAQ;QAAI;IAC3F;AACF"}},
    {"offset": {"line": 123, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}