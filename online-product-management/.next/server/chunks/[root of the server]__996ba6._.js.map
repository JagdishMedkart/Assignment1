{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 63, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/HP/Assignment1/online-product-management/prisma/client.ts"],"sourcesContent":["import { PrismaClient } from \"@prisma/client\";\r\n\r\nconst globalForPrisma = global as unknown as { prisma?: PrismaClient };\r\n\r\nconst prisma = globalForPrisma.prisma || new PrismaClient();\r\n\r\nif (process.env.NODE_ENV !== \"production\") globalForPrisma.prisma = prisma;\r\n\r\nexport default prisma;\r\n"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,kBAAkB;AAExB,MAAM,SAAS,gBAAgB,MAAM,IAAI,IAAI,6HAAA,CAAA,eAAY;AAEzD,wCAA2C,gBAAgB,MAAM,GAAG;uCAErD"}},
    {"offset": {"line": 72, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 78, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/HP/Assignment1/online-product-management/src/middleware/authMiddleware.ts"],"sourcesContent":["// src/middleware/authMiddleware.ts\r\n\r\nimport { NextRequest, NextResponse } from \"next/server\";\r\nimport prisma from \"../../prisma/client\"\r\n\r\nexport async function withAuth(req: NextRequest, res: NextResponse) {\r\n  const authorization = req.headers.get(\"authorization\");\r\n\r\n  if (!authorization) {\r\n    return NextResponse.json(\r\n      { message: \"Unauthorized\" },\r\n      { status: 401 }\r\n    );\r\n  }\r\n\r\n  const token = authorization.split(\" \")[1];\r\n\r\n  try {\r\n    const userSession = await prisma.session.findUnique({\r\n      where: { sessionToken: token },\r\n      include: { user: true },\r\n    });\r\n\r\n    if (!userSession) {\r\n      return NextResponse.json({ message: \"Invalid session\" }, { status: 401 });\r\n    }\r\n\r\n    (req as any).user = userSession.user; // Attach user to request object\r\n    return res;\r\n  } catch (error) {\r\n    console.error(\"Authentication error:\", error);\r\n    return NextResponse.json({ message: \"Internal server error\" }, { status: 500 });\r\n  }\r\n}\r\n"],"names":[],"mappings":"AAAA,mCAAmC;;;;AAEnC;AACA;;;AAEO,eAAe,SAAS,GAAgB,EAAE,GAAiB;IAChE,MAAM,gBAAgB,IAAI,OAAO,CAAC,GAAG,CAAC;IAEtC,IAAI,CAAC,eAAe;QAClB,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,SAAS;QAAe,GAC1B;YAAE,QAAQ;QAAI;IAElB;IAEA,MAAM,QAAQ,cAAc,KAAK,CAAC,IAAI,CAAC,EAAE;IAEzC,IAAI;QACF,MAAM,cAAc,MAAM,kHAAA,CAAA,UAAM,CAAC,OAAO,CAAC,UAAU,CAAC;YAClD,OAAO;gBAAE,cAAc;YAAM;YAC7B,SAAS;gBAAE,MAAM;YAAK;QACxB;QAEA,IAAI,CAAC,aAAa;YAChB,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,SAAS;YAAkB,GAAG;gBAAE,QAAQ;YAAI;QACzE;QAEC,IAAY,IAAI,GAAG,YAAY,IAAI,EAAE,gCAAgC;QACtE,OAAO;IACT,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,yBAAyB;QACvC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,SAAS;QAAwB,GAAG;YAAE,QAAQ;QAAI;IAC/E;AACF"}},
    {"offset": {"line": 123, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 129, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/HP/Assignment1/online-product-management/src/app/api/cart/remove/%5Bid%5D/%5BuserId%5D/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from \"next/server\";\r\nimport prisma from \"../../../../../../../prisma/client\";\r\nimport { withAuth } from \"../../../../../../middleware/authMiddleware\";\r\n\r\nexport async function DELETE(req: NextRequest, { params }: { params: { id: string } }) {\r\n  try {\r\n    const sessionToken = req.cookies.get(\"session-us\")?.value; // Retrieve session-us cookie\r\n\r\n    if (!sessionToken) {\r\n      return NextResponse.json(\r\n        { message: \"Not authenticated\", isLoggedIn: false },\r\n        { status: 401 }\r\n      );\r\n    }\r\n\r\n    // Find the authenticated user based on the session token\r\n    const user = await prisma.user.findFirst({\r\n      where: {\r\n        sessions: {\r\n          some: {\r\n            sessionToken: sessionToken,\r\n          },\r\n        },\r\n      },\r\n    });\r\n\r\n    if (!user) {\r\n      return NextResponse.json(\r\n        { message: \"You are not logged in!\", isLoggedIn: false },\r\n        { status: 401 }\r\n      );\r\n    }\r\n\r\n    const { id } = params; // Get productId from URL parameters\r\n    const userId = user.userId; // Use userId from session\r\n\r\n    if (!id) {\r\n      return NextResponse.json(\r\n        { message: \"Product ID is required\", success: false },\r\n        { status: 400 }\r\n      );\r\n    }\r\n\r\n    // Find the cart item using the composite key (userId and productId)\r\n    const cartItem = await prisma.cartItem.findUnique({\r\n      where: { userId_productId: { userId, productId: Number(id) } },\r\n    });\r\n\r\n    if (!cartItem) {\r\n      return NextResponse.json(\r\n        { message: \"Cart item not found or unauthorized\", success: false },\r\n        { status: 404 }\r\n      );\r\n    }\r\n\r\n    // Delete the cart item\r\n    await prisma.cartItem.delete({\r\n      where: { userId_productId: { userId, productId: Number(id) } },\r\n    });\r\n\r\n    return NextResponse.json(\r\n      { message: \"Item removed from cart successfully\", success: true },\r\n      { status: 200 }\r\n    );\r\n  } catch (error) {\r\n    if (error instanceof Error) {\r\n      console.log(error.stack);\r\n    }\r\n    console.error(\"Error removing item from cart:\", error);\r\n    return NextResponse.json(\r\n      { message: \"Failed to remove item from cart\", success: false },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}\r\n\r\nexport const config = {\r\n  handler: withAuth,\r\n};\r\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;;;;AAEO,eAAe,OAAO,GAAgB,EAAE,EAAE,MAAM,EAA8B;IACnF,IAAI;QACF,MAAM,eAAe,IAAI,OAAO,CAAC,GAAG,CAAC,eAAe,OAAO,6BAA6B;QAExF,IAAI,CAAC,cAAc;YACjB,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;gBAAE,SAAS;gBAAqB,YAAY;YAAM,GAClD;gBAAE,QAAQ;YAAI;QAElB;QAEA,yDAAyD;QACzD,MAAM,OAAO,MAAM,kHAAA,CAAA,UAAM,CAAC,IAAI,CAAC,SAAS,CAAC;YACvC,OAAO;gBACL,UAAU;oBACR,MAAM;wBACJ,cAAc;oBAChB;gBACF;YACF;QACF;QAEA,IAAI,CAAC,MAAM;YACT,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;gBAAE,SAAS;gBAA0B,YAAY;YAAM,GACvD;gBAAE,QAAQ;YAAI;QAElB;QAEA,MAAM,EAAE,EAAE,EAAE,GAAG,QAAQ,oCAAoC;QAC3D,MAAM,SAAS,KAAK,MAAM,EAAE,0BAA0B;QAEtD,IAAI,CAAC,IAAI;YACP,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;gBAAE,SAAS;gBAA0B,SAAS;YAAM,GACpD;gBAAE,QAAQ;YAAI;QAElB;QAEA,oEAAoE;QACpE,MAAM,WAAW,MAAM,kHAAA,CAAA,UAAM,CAAC,QAAQ,CAAC,UAAU,CAAC;YAChD,OAAO;gBAAE,kBAAkB;oBAAE;oBAAQ,WAAW,OAAO;gBAAI;YAAE;QAC/D;QAEA,IAAI,CAAC,UAAU;YACb,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;gBAAE,SAAS;gBAAuC,SAAS;YAAM,GACjE;gBAAE,QAAQ;YAAI;QAElB;QAEA,uBAAuB;QACvB,MAAM,kHAAA,CAAA,UAAM,CAAC,QAAQ,CAAC,MAAM,CAAC;YAC3B,OAAO;gBAAE,kBAAkB;oBAAE;oBAAQ,WAAW,OAAO;gBAAI;YAAE;QAC/D;QAEA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,SAAS;YAAuC,SAAS;QAAK,GAChE;YAAE,QAAQ;QAAI;IAElB,EAAE,OAAO,OAAO;QACd,IAAI,iBAAiB,OAAO;YAC1B,QAAQ,GAAG,CAAC,MAAM,KAAK;QACzB;QACA,QAAQ,KAAK,CAAC,kCAAkC;QAChD,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,SAAS;YAAmC,SAAS;QAAM,GAC7D;YAAE,QAAQ;QAAI;IAElB;AACF;AAEO,MAAM,SAAS;IACpB,SAAS,qIAAA,CAAA,WAAQ;AACnB"}},
    {"offset": {"line": 226, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}