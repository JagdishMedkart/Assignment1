{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 55, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Medkart/Project1/Assignment1/online-product-management/prisma/client.ts"],"sourcesContent":["import { PrismaClient } from \"@prisma/client\";\r\n\r\nconst globalForPrisma = global as unknown as { prisma?: PrismaClient };\r\n\r\nconst prisma = globalForPrisma.prisma || new PrismaClient();\r\n\r\nif (process.env.NODE_ENV !== \"production\") globalForPrisma.prisma = prisma;\r\n\r\nexport default prisma;\r\n"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,kBAAkB;AAExB,MAAM,SAAS,gBAAgB,MAAM,IAAI,IAAI,6HAAA,CAAA,eAAY;AAEzD,wCAA2C,gBAAgB,MAAM,GAAG;uCAErD"}},
    {"offset": {"line": 64, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 78, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Medkart/Project1/Assignment1/online-product-management/src/components/Auth/CheckLoginStatus.tsx"],"sourcesContent":["// src/app/components/CheckLoginStatus.tsx\r\nimport prisma from \"../../../prisma/client\";\r\nimport { cookies } from \"next/headers\";\r\n\r\nexport async function checkLoginStatus() {\r\n  const sessionToken = (await cookies()).get(\"session-us\")?.value; // Adjust cookie key as needed\r\n  if (!sessionToken) {\r\n    return false; // No session token\r\n  }\r\n\r\n  const user = await prisma.user.findFirst({\r\n    where: {\r\n      sessions: {\r\n        some: {\r\n          sessionToken,\r\n        },\r\n      },\r\n    },\r\n  });\r\n\r\n  return Boolean(user); // Return true if a user is found\r\n}\r\n"],"names":[],"mappings":"AAAA,0CAA0C;;;;AAC1C;AACA;;;AAEO,eAAe;IACpB,MAAM,eAAe,CAAC,MAAM,CAAA,GAAA,iIAAA,CAAA,UAAO,AAAD,GAAG,EAAE,GAAG,CAAC,eAAe,OAAO,8BAA8B;IAC/F,IAAI,CAAC,cAAc;QACjB,OAAO,OAAO,mBAAmB;IACnC;IAEA,MAAM,OAAO,MAAM,kHAAA,CAAA,UAAM,CAAC,IAAI,CAAC,SAAS,CAAC;QACvC,OAAO;YACL,UAAU;gBACR,MAAM;oBACJ;gBACF;YACF;QACF;IACF;IAEA,OAAO,QAAQ,OAAO,iCAAiC;AACzD"}},
    {"offset": {"line": 102, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 108, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Medkart/Project1/Assignment1/online-product-management/src/app/api/auth/check/route.ts"],"sourcesContent":["// src/pages/api/auth/check.ts\r\nimport { NextApiRequest, NextApiResponse } from \"next\";\r\nimport { checkLoginStatus } from \"../../../../components/Auth/CheckLoginStatus\";\r\n\r\nexport default async function handler(req: NextApiRequest, res: NextApiResponse) {\r\n  try {\r\n    const isLoggedIn = await checkLoginStatus();\r\n    res.status(200).json({ isLoggedIn });\r\n  } catch (error) {\r\n    console.error(\"Error checking login status:\", error);\r\n    res.status(500).json({ isLoggedIn: false, error: \"Internal server error\" });\r\n  }\r\n}\r\n"],"names":[],"mappings":"AAAA,8BAA8B;;;;AAE9B;;AAEe,eAAe,QAAQ,GAAmB,EAAE,GAAoB;IAC7E,IAAI;QACF,MAAM,aAAa,MAAM,CAAA,GAAA,gJAAA,CAAA,mBAAgB,AAAD;QACxC,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;YAAE;QAAW;IACpC,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,gCAAgC;QAC9C,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;YAAE,YAAY;YAAO,OAAO;QAAwB;IAC3E;AACF"}},
    {"offset": {"line": 128, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}