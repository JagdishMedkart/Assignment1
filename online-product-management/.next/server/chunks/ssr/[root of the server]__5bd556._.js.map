{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 31, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Medkart/Project1/Assignment1/online-product-management/src/components/Layout/ProfileDropdown.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport Link from 'next/link';\r\n\r\nconst ProfileDropdown: React.FC = () => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const toggleDropdown = () => setIsOpen(!isOpen);\r\n\r\n  const handleLogout = () => {\r\n    document.cookie = 'session-us=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;';\r\n    localStorage.removeItem(\"cart\");\r\n    // Optionally, you might want to redirect the user or update app state\r\n    window.location.href = '/';\r\n  };\r\n\r\n  return (\r\n    <div className=\"relative\">\r\n      <button\r\n        className=\"flex items-center focus:outline-none align-middle\"\r\n        onClick={toggleDropdown}\r\n        aria-label=\"Profile menu\"\r\n      >\r\n        <div className=\"w-8 h-8 bg-gray-300 rounded-full align-middle\"></div>\r\n      </button>\r\n\r\n      {isOpen && (\r\n        <div className=\"absolute right-0 mt-2 w-48 bg-black rounded-lg shadow-lg z-10\">\r\n          <div className=\"py-1\">\r\n            <Link href=\"/profile\">\r\n              <div className=\"block px-4 py-2 text-white hover:bg-gray-800\">\r\n                Profile\r\n              </div>\r\n            </Link>\r\n            <Link href=\"/dashboard/home\">\r\n              <div className=\"block px-4 py-2 text-white hover:bg-gray-800\">\r\n                Dashboard\r\n              </div>\r\n            </Link>\r\n            <button\r\n              className=\"block w-full px-4 py-2 text-left text-white hover:bg-gray-800\"\r\n              onClick={handleLogout}\r\n            >\r\n              Logout\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileDropdown;"],"names":[],"mappings":";;;;AAAA;AACA;;;;AAEA,MAAM,kBAA4B;IAChC,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACrC,MAAM,iBAAiB,IAAM,UAAU,CAAC;IAExC,MAAM,eAAe;QACnB,SAAS,MAAM,GAAG;QAClB,aAAa,UAAU,CAAC;QACxB,sEAAsE;QACtE,OAAO,QAAQ,CAAC,IAAI,GAAG;IACzB;IAEA,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBACC,WAAU;gBACV,SAAS;gBACT,cAAW;0BAEX,cAAA,8OAAC;oBAAI,WAAU;;;;;;;;;;;YAGhB,wBACC,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC;oBAAI,WAAU;;sCACb,8OAAC,4JAAA,CAAA,UAAI;4BAAC,MAAK;sCACT,cAAA,8OAAC;gCAAI,WAAU;0CAA+C;;;;;;;;;;;sCAIhE,8OAAC,4JAAA,CAAA,UAAI;4BAAC,MAAK;sCACT,cAAA,8OAAC;gCAAI,WAAU;0CAA+C;;;;;;;;;;;sCAIhE,8OAAC;4BACC,WAAU;4BACV,SAAS;sCACV;;;;;;;;;;;;;;;;;;;;;;;AAQb;uCAEe"}},
    {"offset": {"line": 131, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 137, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Medkart/Project1/Assignment1/online-product-management/src/components/Layout/Nav.tsx"],"sourcesContent":["\"use client\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport Link from \"next/link\";\r\nimport { useRouter } from \"next/navigation\";\r\nimport { getCookie } from \"cookies-next\";\r\nimport ProfileDropdown from \"./ProfileDropdown\"\r\n\r\nconst Nav: React.FC = () => {\r\n  const router = useRouter();\r\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\r\n  const [showDropdown, setShowDropdown] = useState(false);\r\n  const [isLogin, setIsLogin] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  const toggleMenu = () => setIsMenuOpen(!isMenuOpen);\r\n\r\n  useEffect(() => {\r\n    const token = getCookie('session-us');\r\n    setIsLogin(!!token);\r\n    setIsLoading(false);\r\n  }, []);\r\n\r\n//   if (isLoading) return null;\r\n\r\n  return (\r\n    <nav className=\"bg-gray-900 border-gray-700\">\r\n      <div className=\"max-w-screen-3xl mx-auto px-4\">\r\n        <div className=\"flex items-center justify-between py-4\">\r\n          <div className=\"flex items-center md:hidden\">\r\n            <button\r\n              onClick={toggleMenu}\r\n              type=\"button\"\r\n              className=\"inline-flex items-center p-2 rounded-lg focus:outline-none focus:ring-2 dark:text-gray-400 hover:bg-gray-700 focus:ring-gray-600\"\r\n              aria-controls=\"navbar-dropdown\"\r\n              aria-expanded={isMenuOpen}\r\n            >\r\n              <span className=\"sr-only\">Open main menu</span>\r\n              <svg\r\n                className=\"w-5 h-5\"\r\n                viewBox=\"0 0 17 14\"\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                fill=\"none\"\r\n                stroke=\"currentColor\"\r\n                strokeLinecap=\"round\"\r\n                strokeLinejoin=\"round\"\r\n                strokeWidth=\"2\"\r\n              >\r\n                <path d=\"M1 1h15M1 7h15M1 13h15\"></path>\r\n              </svg>\r\n            </button>\r\n          </div>\r\n\r\n          <div className=\"flex justify-center md:justify-start flex-grow\">\r\n            <a href=\"#\" className=\"text-2xl font-semibold text-white\">\r\n              ProductEase\r\n            </a>\r\n          </div>\r\n\r\n          <div className=\"hidden md:flex items-center space-x-6\">\r\n            <ul className=\"flex items-center space-x-6\">\r\n              <li>\r\n                <Link href=\"/\" className=\"text-white hover:text-gray-300\">Home</Link>\r\n              </li>\r\n              <li>\r\n                <Link href=\"/productservices\" className=\"text-white hover:text-gray-300\">\r\n                  Services\r\n                </Link>\r\n              </li>\r\n              <li>\r\n                <Link href=\"/viewproducts\" className=\"text-white hover:text-gray-300\">\r\n                  Products\r\n                </Link>\r\n              </li>\r\n              <li>\r\n                <Link href=\"/cart\" className=\"text-white hover:text-gray-300\">\r\n                  Goto Cart\r\n                </Link>\r\n              </li>\r\n            </ul>\r\n            <div>\r\n              {isLogin ? (\r\n                 <ProfileDropdown />\r\n              ) : (\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => router.push(\"/auth/signup\")}\r\n                  className=\"bg-white text-black font-medium rounded-lg text-sm px-5 py-1 text-center\"\r\n                >\r\n                  Login\r\n                </button>\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"flex items-center md:hidden\">\r\n            <div className=\"ml-auto\"> \r\n              {isLogin ? (\r\n                 <ProfileDropdown />\r\n              )\r\n                  : (\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => router.push(\"/auth/signup\")}\r\n                  className=\"bg-white text-black font-medium rounded-lg text-sm px-5 py-1 text-center\"\r\n                >\r\n                  Login\r\n                </button>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div\r\n          className={`md:hidden ${isMenuOpen ? \"block\" : \"hidden\"} pb-4`}\r\n          id=\"navbar-dropdown\"\r\n        >\r\n          <ul className=\"flex flex-col font-medium p-4 border rounded-lg bg-gray-800 border-gray-700\">\r\n            <li>\r\n              <Link href=\"#\"\r\n                className=\"block py-2 px-3 text-white rounded bg-slate-400\"\r\n                aria-current=\"page\">\r\n                Home\r\n              </Link>\r\n            </li>\r\n            <li>\r\n              <Link href=\"/productservices\" className=\"block py-2 px-3 rounded text-white hover:bg-gray-700\">\r\n                Services\r\n              </Link>\r\n            </li>\r\n            <li>\r\n              <Link href=\"/viewproducts\" className=\"block py-2 px-3 rounded text-white hover:bg-gray-700\">\r\n                Products\r\n              </Link>\r\n            </li>\r\n            <li>\r\n              <Link href=\"/cart\" className=\"block py-2 px-3 rounded text-white hover:bg-gray-700\">\r\n                Goto Cart\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Nav;"],"names":[],"mappings":"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"}},
    {"offset": {"line": 462, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 468, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Medkart/Project1/Assignment1/online-product-management/src/components/Products/ViewProductsComponent.tsx"],"sourcesContent":["\"use client\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport Image from \"next/image\";\r\nimport Fuse from \"fuse.js\";\r\nimport { FaSearch, FaSync } from \"react-icons/fa\";\r\nimport { useRouter } from 'next/navigation'\r\n\r\n// Define types for product and API response\r\ninterface Product {\r\n  wsCode: string;\r\n  name: string;\r\n  salesPrice: number;\r\n  mrp: number;\r\n  packageSize: number;\r\n  categoryId: string;\r\n  images: string[];\r\n  tags: string[];\r\n}\r\n\r\ninterface ApiResponse {\r\n  products: Product[];\r\n}\r\n\r\nconst ProductSearch: React.FC = () => {\r\n  const router = useRouter();\r\n  const [searchQuery, setSearchQuery] = useState<string>(\"\");\r\n  const [filteredProducts, setFilteredProducts] = useState<Product[]>([]);\r\n  const [randomProducts, setRandomProducts] = useState<Product[]>([]);\r\n  const [allProducts, setAllProducts] = useState<Product[]>([]);\r\n  const [showDropdown, setShowDropdown] = useState<boolean>(false);\r\n  const [selectedProduct, setSelectedProduct] = useState<Product | null>(null);\r\n\r\n  // Fetch all products from the database (for search)\r\n  useEffect(() => {\r\n    const fetchProducts = async () => {\r\n      const response = await fetch(\"/api/products\");\r\n      const data: ApiResponse = await response.json();\r\n      setAllProducts(data.products);\r\n\r\n      // Show 5 random products initially\r\n      const randomSelection = getRandomProducts(data.products, 5);\r\n      setRandomProducts(randomSelection);\r\n    };\r\n    fetchProducts();\r\n  }, []);\r\n\r\n  // Function to select random products from all products\r\n  const getRandomProducts = (products: Product[], count: number): Product[] => {\r\n    const shuffled = [...products].sort(() => 0.5 - Math.random());\r\n    return shuffled.slice(0, count);\r\n  };\r\n\r\n  // Initialize fuse.js for fuzzy searching\r\n  const fuse = new Fuse(allProducts, {\r\n    keys: [\"name\", \"wsCode\"], // Search by product name and wsCode\r\n    threshold: 0.3, // Fuzzy matching threshold\r\n  });\r\n\r\n  // Perform search and filter products based on query\r\n  const handleSearchChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    const query = event.target.value;\r\n    setSearchQuery(query);\r\n\r\n    if (query.length > 0) {\r\n      const results = fuse.search(query);\r\n      setFilteredProducts(results.map((result) => result.item)); // Extract items from fuse results\r\n      setShowDropdown(true);\r\n    } else {\r\n      setFilteredProducts([]);\r\n      setShowDropdown(false);\r\n    }\r\n  };\r\n\r\n  // Highlight matching parts in the product name\r\n  const highlightText = (text: string, query: string): JSX.Element[] => {\r\n    const regex = new RegExp(`(${query})`, \"gi\");\r\n    return text.split(regex).map((part, index) =>\r\n      part.toLowerCase() === query.toLowerCase() ? (\r\n        <span key={index} className=\"bg-yellow-300\">{part}</span>\r\n      ) : (\r\n        part\r\n      )\r\n    );\r\n  };\r\n\r\n  const handleSearchClick = () => {\r\n    // Perform search and show cards on clicking search button\r\n    if (searchQuery.length > 0) {\r\n      const results = fuse.search(searchQuery);\r\n      setFilteredProducts(results.map((result) => result.item));\r\n    }\r\n    setShowDropdown(false);\r\n  };\r\n\r\n  const handleRefreshClick = () => {\r\n    // Reset search and show random products\r\n    setSearchQuery(\"\");\r\n    setFilteredProducts([]);\r\n    setShowDropdown(false);\r\n    setSelectedProduct(null);\r\n  };\r\n\r\n  const handleProductClick = (product: Product) => {\r\n    console.log(`${product} is cliekced`)\r\n    router.push(`/viewproducts/${product.wsCode}`);\r\n  };\r\n\r\n  const getRandomImage = (images: string[]): string => {\r\n    if (images.length > 0) {\r\n      const randomIndex = Math.floor(Math.random() * Math.min(5, images.length));\r\n      return images[randomIndex];\r\n    }\r\n    return \"/default-image.jpg\"; // fallback image if no images are available\r\n  };\r\n\r\n  return (\r\n    <div className=\"max-w-7xl mx-auto p-6\">\r\n      {/* Search Bar */}\r\n      <div className=\"relative mb-6 flex items-center space-x-2\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Search for products by name or WS code...\"\r\n          value={searchQuery}\r\n          onChange={handleSearchChange}\r\n          className=\"w-full py-3 px-4 border border-gray-300 rounded-lg shadow-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n        />\r\n        <button\r\n          onClick={handleSearchClick}\r\n          className=\"text-gray-500 p-2\"\r\n        >\r\n          <FaSearch size={24} />\r\n        </button>\r\n        <button\r\n          onClick={handleRefreshClick}\r\n          className=\"text-gray-500 p-2\"\r\n        >\r\n          <FaSync size={24} />\r\n        </button>\r\n      </div>\r\n\r\n      {/* Dropdown for dynamic search results */}\r\n      {showDropdown && filteredProducts.length > 0 && (\r\n        <div className=\"absolute z-10 bg-white w-full border border-gray-300 rounded-lg shadow-lg max-h-60 overflow-y-auto mt-1\">\r\n          {filteredProducts.map((product) => (\r\n            <div\r\n              key={product.wsCode}\r\n              className=\"px-4 py-2 hover:bg-gray-100 cursor-pointer\"\r\n              onClick={() => handleProductClick(product)}\r\n            >\r\n              <p className=\"text-sm\">\r\n                {highlightText(product.name, searchQuery)} - {product.wsCode}\r\n              </p>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n\r\n      {/* Display Random Products or Search Results as Product Cards */}\r\n      <div className=\"mt-8\">\r\n        <h2 className=\"text-2xl font-semibold text-gray-800 mb-6\">\r\n          {searchQuery.length > 0 || selectedProduct ? \"Search Results\" : \"Recommended Products\"}\r\n        </h2>\r\n        <div className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-8\">\r\n          {(searchQuery.length > 0 || selectedProduct ? filteredProducts : randomProducts).map((product) => (\r\n            <div key={product.wsCode} className=\"border rounded-lg overflow-hidden shadow-lg bg-white transition-transform duration-300 ease-in-out hover:scale-105\">\r\n              <div className=\"w-full h-64 relative\">\r\n                <Image\r\n                  src={getRandomImage(product.images)} // Random image from product images\r\n                  alt={product.name}\r\n                  layout=\"fill\"\r\n                  objectFit=\"cover\"\r\n                  className=\"rounded-t-lg\"\r\n                  onClick={() => handleProductClick(product)}\r\n                />\r\n              </div>\r\n              <div className=\"p-4\">\r\n                <h3 className=\"text-lg font-semibold text-gray-900\">\r\n                  {highlightText(product.name, searchQuery)}\r\n                </h3>\r\n                <p className=\"text-xl font-semibold text-green-600\">${product.salesPrice}</p>\r\n                <p className=\"text-sm text-gray-600\">MRP: ${product.mrp}</p>\r\n                <p className=\"text-sm text-gray-600\">Package Size: {product.packageSize}</p>\r\n                <p className=\"text-sm text-gray-600\">Category: {product.categoryId}</p>\r\n\r\n                {/* Tags */}\r\n                <div className=\"mt-2 flex flex-wrap gap-2\">\r\n                  {product.tags && product.tags.map((tag, index) => (\r\n                    <span key={index} className=\"text-xs text-white bg-blue-500 px-2 py-1 rounded-full\">\r\n                      {tag}\r\n                    </span>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductSearch;\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 786, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}