{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Medkart/Project1/Assignment1/online-product-management/src/components/CartContext.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport React, { createContext, useContext, useState, useEffect } from \"react\";\r\n\r\n// Define Cart Item Type\r\ninterface CartItem {\r\n  productId: string;\r\n  name: string;\r\n  price: number;\r\n  quantity: number;\r\n  image: string;\r\n}\r\n\r\ninterface CartContextType {\r\n  cart: CartItem[];\r\n  addToCart: (item: CartItem) => void;\r\n  removeFromCart: (productId: string) => void;\r\n  clearCart: () => void;\r\n}\r\n\r\n// Create Cart Context\r\nconst CartContext = createContext<CartContextType | undefined>(undefined);\r\n\r\nexport const useCart = (): CartContextType => {\r\n  const context = useContext(CartContext);\r\n  if (!context) {\r\n    throw new Error(\"useCart must be used within a CartProvider\");\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const CartProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\r\n  const [cart, setCart] = useState<CartItem[]>([]);\r\n\r\n  // Load cart from localStorage on initial render\r\n  useEffect(() => {\r\n    const storedCart = localStorage.getItem(\"cart\");\r\n    if (storedCart) {\r\n      setCart(JSON.parse(storedCart));\r\n    }\r\n  }, []);\r\n\r\n  // Update localStorage whenever cart changes\r\n  useEffect(() => {\r\n    localStorage.setItem(\"cart\", JSON.stringify(cart));\r\n  }, [cart]);\r\n\r\n  const addToCart = (item: CartItem) => {\r\n    setCart((prevCart) => {\r\n      const existingItemIndex = prevCart.findIndex((i) => i.productId === item.productId);\r\n      let currentQuantity = 0;\r\n      if(existingItemIndex !== -1)\r\n      {\r\n        currentQuantity = prevCart[existingItemIndex].quantity;\r\n        setCart((prevCart) => prevCart.filter((item) => item.productId !== item.productId));\r\n      }\r\n      console.log(existingItemIndex);\r\n      console.log(prevCart);\r\n      \r\n      if (existingItemIndex !== -1) {\r\n        // If the item already exists, just update the quantity to the exact selected quantity\r\n        const updatedCart = [...prevCart];\r\n        console.log(\"qua = \", item.quantity)\r\n        console.log(\"old quantity = \", updatedCart[existingItemIndex].quantity)\r\n        updatedCart[existingItemIndex].quantity += item.quantity; // Replace with selected quantity\r\n        console.log(\"new quantity = \", updatedCart[existingItemIndex].quantity)\r\n        console.log(prevCart);\r\n        return updatedCart;\r\n      } else {\r\n        // If item does not exist, add it as new\r\n        return [...prevCart, item];\r\n      }\r\n    });\r\n  };\r\n\r\n  const removeFromCart = (productId: string) => {\r\n    setCart((prevCart) => prevCart.filter((item) => item.productId !== productId));\r\n  };\r\n\r\n  const clearCart = () => {\r\n    setCart([]);\r\n  };\r\n\r\n  return (\r\n    <CartContext.Provider value={{ cart, addToCart, removeFromCart, clearCart }}>\r\n      {children}\r\n    </CartContext.Provider>\r\n  );\r\n};\r\n"],"names":[],"mappings":";;;;;AAEA;AAFA;;;AAoBA,sBAAsB;AACtB,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,gBAAa,AAAD,EAA+B;AAExD,MAAM,UAAU;IACrB,MAAM,UAAU,CAAA,GAAA,qMAAA,CAAA,aAAU,AAAD,EAAE;IAC3B,IAAI,CAAC,SAAS;QACZ,MAAM,IAAI,MAAM;IAClB;IACA,OAAO;AACT;AAEO,MAAM,eAAwD,CAAC,EAAE,QAAQ,EAAE;IAChF,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAc,EAAE;IAE/C,gDAAgD;IAChD,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,aAAa,aAAa,OAAO,CAAC;QACxC,IAAI,YAAY;YACd,QAAQ,KAAK,KAAK,CAAC;QACrB;IACF,GAAG,EAAE;IAEL,4CAA4C;IAC5C,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,aAAa,OAAO,CAAC,QAAQ,KAAK,SAAS,CAAC;IAC9C,GAAG;QAAC;KAAK;IAET,MAAM,YAAY,CAAC;QACjB,QAAQ,CAAC;YACP,MAAM,oBAAoB,SAAS,SAAS,CAAC,CAAC,IAAM,EAAE,SAAS,KAAK,KAAK,SAAS;YAClF,IAAI,kBAAkB;YACtB,IAAG,sBAAsB,CAAC,GAC1B;gBACE,kBAAkB,QAAQ,CAAC,kBAAkB,CAAC,QAAQ;gBACtD,QAAQ,CAAC,WAAa,SAAS,MAAM,CAAC,CAAC,OAAS,KAAK,SAAS,KAAK,KAAK,SAAS;YACnF;YACA,QAAQ,GAAG,CAAC;YACZ,QAAQ,GAAG,CAAC;YAEZ,IAAI,sBAAsB,CAAC,GAAG;gBAC5B,sFAAsF;gBACtF,MAAM,cAAc;uBAAI;iBAAS;gBACjC,QAAQ,GAAG,CAAC,UAAU,KAAK,QAAQ;gBACnC,QAAQ,GAAG,CAAC,mBAAmB,WAAW,CAAC,kBAAkB,CAAC,QAAQ;gBACtE,WAAW,CAAC,kBAAkB,CAAC,QAAQ,IAAI,KAAK,QAAQ,EAAE,iCAAiC;gBAC3F,QAAQ,GAAG,CAAC,mBAAmB,WAAW,CAAC,kBAAkB,CAAC,QAAQ;gBACtE,QAAQ,GAAG,CAAC;gBACZ,OAAO;YACT,OAAO;gBACL,wCAAwC;gBACxC,OAAO;uBAAI;oBAAU;iBAAK;YAC5B;QACF;IACF;IAEA,MAAM,iBAAiB,CAAC;QACtB,QAAQ,CAAC,WAAa,SAAS,MAAM,CAAC,CAAC,OAAS,KAAK,SAAS,KAAK;IACrE;IAEA,MAAM,YAAY;QAChB,QAAQ,EAAE;IACZ;IAEA,qBACE,8OAAC,YAAY,QAAQ;QAAC,OAAO;YAAE;YAAM;YAAW;YAAgB;QAAU;kBACvE;;;;;;AAGP"}},
    {"offset": {"line": 98, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 108, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Medkart/Project1/Assignment1/online-product-management/node_modules/next/src/server/route-modules/app-page/module.compiled.js"],"sourcesContent":["if (process.env.NEXT_RUNTIME === 'edge') {\n  module.exports = require('next/dist/server/route-modules/app-page/module.js')\n} else {\n  if (process.env.__NEXT_EXPERIMENTAL_REACT) {\n    if (process.env.NODE_ENV === 'development') {\n      module.exports = require('next/dist/compiled/next-server/app-page-experimental.runtime.dev.js')\n    } else if (process.env.TURBOPACK) {\n      module.exports = require('next/dist/compiled/next-server/app-page-turbo-experimental.runtime.prod.js')\n    } else {\n      module.exports = require('next/dist/compiled/next-server/app-page-experimental.runtime.prod.js')\n    }\n  } else {\n    if (process.env.NODE_ENV === 'development') {\n      module.exports = require('next/dist/compiled/next-server/app-page.runtime.dev.js')\n    } else if (process.env.TURBOPACK) {\n      module.exports = require('next/dist/compiled/next-server/app-page-turbo.runtime.prod.js')\n    } else {\n      module.exports = require('next/dist/compiled/next-server/app-page.runtime.prod.js')\n    }\n  }\n}\n"],"names":["process","env","NEXT_RUNTIME","module","exports","require","__NEXT_EXPERIMENTAL_REACT","NODE_ENV","TURBOPACK"],"mappings":";AAAA,IAAIA,QAAQC,GAAG,CAACC,YAAY,KAAK,MAAQ;;AAEzC,OAAO;IACL,IAAIF,QAAQC,GAAG,CAACK,uBAA2B,EAAF;;IAQzC,OAAO;QACL,IAAIN,QAAQC,GAAG,CAACM,QAAQ,KAAK,WAAe;YAC1CJ,OAAOC,OAAO,GAAGC,QAAQ;QAC3B,OAAO,IAAIL,QAAQC,GAAG,CAACO,SAAS,EAAE;;QAIlC;IACF;AACF","ignoreList":[0]}},
    {"offset": {"line": 122, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 127, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Medkart/Project1/Assignment1/online-product-management/node_modules/next/src/server/route-modules/app-page/vendored/ssr/react-jsx-dev-runtime.ts"],"sourcesContent":["module.exports = require('../../module.compiled').vendored[\n  'react-ssr'\n].ReactJsxDevRuntime\n"],"names":["module","exports","require","vendored","ReactJsxDevRuntime"],"mappings":";AAAAA,OAAOC,OAAO,GAAGC,QAAQ,0HAAyBC,QAAQ,CACxD,YACD,CAACC,kBAAkB","ignoreList":[0]}},
    {"offset": {"line": 129, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 134, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Medkart/Project1/Assignment1/online-product-management/node_modules/next/src/server/route-modules/app-page/vendored/ssr/react.ts"],"sourcesContent":["module.exports = require('../../module.compiled').vendored['react-ssr'].React\n"],"names":["module","exports","require","vendored","React"],"mappings":";AAAAA,OAAOC,OAAO,GAAGC,QAAQ,0HAAyBC,QAAQ,CAAC,YAAY,CAACC,KAAK","ignoreList":[0]}},
    {"offset": {"line": 136, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}