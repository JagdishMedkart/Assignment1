{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/HP/Assignment1/online-product-management/src/components/Layout/Profile.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport zxcvbn from 'zxcvbn';\r\nimport toast from \"react-hot-toast\";\r\n\r\nconst Profile = (props: { Username: string, Email: string }) => {\r\n  const [username, setUsername] = useState(props.Username);\r\n  const [email, setEmail] = useState(props.Email);\r\n  const [isChangingPassword, setIsChangingPassword] = useState(false);\r\n  const [newPassword, setNewPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [passwordStrength, setPasswordStrength] = useState<number>(0);\r\n  const [isPasswordFocused, setPasswordFocused] = useState<boolean>(false);\r\n  const [isConfirmPasswordFocused, setConfirmPasswordFocused] = useState<boolean>(false);\r\n  const [errors, setErrors] = useState<{ oldPassword?: string; newPassword?: string; confirmPassword?: string }>({});\r\n\r\n  const validatePasswordChange = () => {\r\n    let valid = true;\r\n    const errors: { oldPassword?: string; newPassword?: string; confirmPassword?: string } = {};\r\n\r\n    if (newPassword !== confirmPassword) {\r\n      errors.confirmPassword = 'Passwords do not match';\r\n      valid = false;\r\n    }\r\n\r\n    setErrors(errors);\r\n    return valid;\r\n  };\r\n\r\n  const getPasswordStrengthMessage = () => {\r\n    switch (passwordStrength) {\r\n      case 0:\r\n        return 'Very Weak';\r\n      case 1:\r\n        return 'Weak';\r\n      case 2:\r\n        return 'Fair';\r\n      case 3:\r\n        return 'Good';\r\n      case 4:\r\n        return 'Strong';\r\n      default:\r\n        return '';\r\n    }\r\n  };\r\n\r\n  const getPasswordStrengthColor = () => {\r\n    switch (passwordStrength) {\r\n      case 0:\r\n        return 'text-red-500';\r\n      case 1:\r\n        return 'text-red-500';\r\n      case 2:\r\n        return 'text-yellow-500';\r\n      case 3:\r\n        return 'text-blue-500';\r\n      case 4:\r\n        return 'text-green-500';\r\n      default:\r\n        return '';\r\n    }\r\n  };\r\n\r\n  const handlePasswordFocus = () => {\r\n    setPasswordFocused(true);\r\n  };\r\n\r\n  const handlePasswordBlur = () => {\r\n    if (newPassword === '') {\r\n      setPasswordFocused(false);\r\n    }\r\n  };\r\n\r\n  const handleConfirmPasswordFocus = () => {\r\n    setConfirmPasswordFocused(true);\r\n  };\r\n\r\n  const handleConfirmPasswordBlur = () => {\r\n    if (confirmPassword === '') {\r\n      setConfirmPasswordFocused(false);\r\n    }\r\n  };\r\n\r\n  const handlePasswordChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const password = e.target.value;\r\n    setNewPassword(password);\r\n    setPasswordStrength(zxcvbn(password).score);\r\n\r\n    if (confirmPassword !== password) {\r\n      setErrors((prevErrors) => ({\r\n        ...prevErrors,\r\n        confirmPassword: isConfirmPasswordFocused ? 'Passwords do not match' : undefined,\r\n      }));\r\n    } else {\r\n      setErrors((prevErrors) => ({\r\n        ...prevErrors,\r\n        confirmPassword: isConfirmPasswordFocused ? undefined : 'Passwords do not match',\r\n      }));\r\n    }\r\n  };\r\n\r\n  const handleConfirmPasswordChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const value = e.target.value;\r\n    setConfirmPassword(value);\r\n    if (newPassword !== value) {\r\n      setErrors((prevErrors) => ({\r\n        ...prevErrors,\r\n        confirmPassword: isConfirmPasswordFocused ? 'Passwords do not match' : undefined,\r\n      }));\r\n    } else {\r\n      setErrors((prevErrors) => ({\r\n        ...prevErrors,\r\n        confirmPassword: undefined,\r\n      }));\r\n    }\r\n  };\r\n\r\n  const handleClick = async () => {\r\n    if (!validatePasswordChange()) return;\r\n\r\n    const response = await fetch('/api/user', {\r\n      method: 'PATCH',\r\n      body: JSON.stringify({\r\n        password: newPassword\r\n      }),\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      }\r\n    });\r\n\r\n    if (response.ok) {\r\n      setNewPassword('');\r\n      setConfirmPassword('');\r\n      toast.success('Successfully Updated Password!');\r\n    } else {\r\n      toast.error('Password Not Updated');\r\n    }\r\n    setIsChangingPassword(!isChangingPassword);\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-[80vh] bg-gray-100 text-gray-900 flex items-center justify-center py-32 px-4 sm:px-6 lg:px-8\">\r\n      <div className=\"max-w-md w-full space-y-8 bg-white p-6 rounded-2xl shadow-lg\">\r\n        <div className=\"relative w-32 h-32 mx-auto -mt-24 bg-gray-300 rounded-full border-8 border-white flex items-center justify-center\">\r\n          <svg className=\"w-16 h-16 text-gray-800\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\r\n            <path d=\"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z\" />\r\n          </svg>\r\n        </div>\r\n        <div className=\"text-center mt-20\">\r\n          <h2 className=\"text-3xl font-extrabold text-gray-900\">{username}</h2>\r\n          <p className=\"mt-2 text-lg text-gray-600\">{email}</p>\r\n        </div>\r\n        <div className=\"mt-8 space-y-6\">\r\n          <button\r\n            onClick={() => setIsChangingPassword(!isChangingPassword)}\r\n            className=\"w-full py-2 px-4 bg-gray-900 text-white font-semibold rounded-full shadow-lg transition-transform duration-300 transform hover:bg-gray-700\"\r\n          >\r\n            Change Password\r\n          </button>\r\n          {isChangingPassword && (\r\n            <div className=\"space-y-4\">\r\n              {(\r\n                <>\r\n                  <input\r\n                    type=\"password\"\r\n                    placeholder=\"New Password\"\r\n                    value={newPassword}\r\n                    onChange={handlePasswordChange}\r\n                    onFocus={handlePasswordFocus}\r\n                    onBlur={handlePasswordBlur}\r\n                    className=\"w-full px-4 py-2 border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-gray-600\"\r\n                  />\r\n                  {errors.newPassword && <p className=\"mt-1 text-sm text-red-500\">{errors.newPassword}</p>}\r\n                  {isPasswordFocused && newPassword.length > 0 && (\r\n                    <p className={`mt-1 text-sm ${getPasswordStrengthColor()}`}>\r\n                      {getPasswordStrengthMessage()}\r\n                    </p>\r\n                  )}\r\n                  <input\r\n                    type=\"password\"\r\n                    placeholder=\"Confirm New Password\"\r\n                    value={confirmPassword}\r\n                    onChange={handleConfirmPasswordChange}\r\n                    onFocus={handleConfirmPasswordFocus}\r\n                    onBlur={handleConfirmPasswordBlur}\r\n                    className=\"w-full px-4 py-2 border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-gray-600\"\r\n                  />\r\n                  {isConfirmPasswordFocused && errors.confirmPassword && (\r\n                    <p className=\"mt-1 text-sm text-red-500\">{errors.confirmPassword}</p>\r\n                  )}\r\n                </>\r\n              )}\r\n              <button\r\n                onClick={handleClick}\r\n                className=\"w-full py-2 px-4 bg-gray-900 text-white font-semibold rounded-full shadow-lg transition-transform duration-300 transform hover:bg-gray-700\"\r\n              >\r\n                Save Changes\r\n              </button>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;"],"names":[],"mappings":"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"}},
    {"offset": {"line": 302, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}