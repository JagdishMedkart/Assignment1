{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 31, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Medkart/Project1/Assignment1/online-product-management/src/components/Layout/Spinner.tsx"],"sourcesContent":["import React from 'react'\r\n\r\nfunction Spinner() {\r\n  return (\r\n    <>Loading...\r\n      <div\r\n        className=\"inline-block h-4 w-4 ml-3 animate-spin rounded-full border-2 border-solid border-current border-e-transparent align-[-0.125em] text-surface motion-reduce:animate-[spin_1.5s_linear_infinite] dark:text-white\"\r\n        role=\"status\">\r\n        <span\r\n          className=\"!absolute !-m-px !h-px !w-px !overflow-hidden !whitespace-nowrap !border-0 !p-0 ![clip:rect(0,0,0,0)]\"\r\n        ></span>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Spinner"],"names":[],"mappings":";;;;;AAEA,SAAS;IACP,qBACE;;YAAE;0BACA,8OAAC;gBACC,WAAU;gBACV,MAAK;0BACL,cAAA,8OAAC;oBACC,WAAU;;;;;;;;;;;;;AAKpB;uCAEe"}},
    {"offset": {"line": 59, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 65, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Medkart/Project1/Assignment1/online-product-management/src/components/Auth/SigninOTP.tsx"],"sourcesContent":["\"use client\"\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useRouter } from 'next/navigation'\r\nimport Spinner from '../Layout/Spinner';\r\nimport toast, { Toaster } from 'react-hot-toast';\r\nimport Image from 'next/image';\r\n\r\nconst SignInOTP: React.FC = () => {\r\n  const router = useRouter();\r\n  const [email, setEmail] = useState(localStorage.getItem('email'));\r\n  const [isSubmitting, setSubmitting] = useState<boolean>(false);\r\n  const [errors, setErrors] = useState<{ fullName?: string; email?: string; password?: string; confirmPassword?: string; otp?: string }>({});\r\n  const [otp, setOtp] = useState(new Array(6).fill(''));\r\n  const [otpVisible, setOtpVisible] = useState(false);\r\n  const [otpButton, setOtpButton] = useState(false);\r\n  const [timer, setTimer] = useState(0);\r\n  const [otpError, setOtpError] = useState(false);\r\n  const [emailVerified, setEmailVerified] = useState(false);\r\n  const [correctOtp, setCorrectOtp] = useState('no otp set');\r\n\r\n  const handleEmailChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const value = e.target.value;\r\n    setEmailVerified(false);\r\n    setEmail(value);\r\n\r\n    let emailError = '';\r\n    if (!value) {\r\n      emailError = 'Email is required';\r\n    } else if (!/\\S+@\\S+\\.\\S+/.test(value)) {\r\n      emailError = 'Email is invalid';\r\n    } else {\r\n      emailError = 'Verify Email first!'; // Clear email error if email is valid\r\n    }\r\n\r\n    setErrors((prevErrors) => ({ ...prevErrors, email: emailError }));\r\n  };\r\n\r\n  const handleOtpChange = (element: any, index: any) => {\r\n    const value = element.value;\r\n    if (/^[0-9]$/.test(value)) {\r\n      let newOtp = [...otp];\r\n      newOtp[index] = value;\r\n      setOtp(newOtp);\r\n      setOtpError(false);\r\n      if (element.nextSibling) {\r\n        element.nextSibling.focus();\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleOtpVisibility = () => {\r\n    //\r\n    setOtpVisible(true);\r\n    handleResendOtp();\r\n    setErrors((prevErrors) => ({ ...prevErrors, email: undefined })); // Clear the email error when OTP verification starts\r\n  };\r\n  const handleResendOtp = async () => {\r\n    //setCorrectOtp(Math.floor(100000 + Math.random() * 900000).toString());\r\n    let data = { to: email, subject: \"OTP SENT\", text: correctOtp };\r\n    const response = await fetch('/api/auth/email', {\r\n      method: 'POST',\r\n      body: JSON.stringify(data),\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      }\r\n    }).then(d => d.json());\r\n    if (response.message == 'Email sent successfully') {\r\n      setCorrectOtp(response.otp);\r\n      toast.success('OTP Sent Successfully', {\r\n        position: 'top-center',\r\n        style: {\r\n          fontSize: '12px',\r\n          padding: '8px',\r\n          borderRadius: '5px',\r\n        }\r\n      });\r\n    }\r\n    setTimer(60); // Clear the email error when OTP verification starts\r\n  };\r\n\r\n  const handleOtpKeyDown = (e: React.KeyboardEvent<HTMLInputElement>, index: number) => {\r\n    if (e.key === 'Backspace') {\r\n      let newOtp = [...otp];\r\n      newOtp[index] = '';\r\n      setOtp(newOtp);\r\n\r\n      // Focus the previous input\r\n      const prevSibling = (e.target as HTMLInputElement).previousSibling;\r\n      if (prevSibling && prevSibling instanceof HTMLInputElement) {\r\n        prevSibling.focus();\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleOtpSubmit = () => {\r\n    const enteredOtp = otp.join('');\r\n    if (enteredOtp !== correctOtp) {\r\n      setOtpError(true);\r\n      setOtp(new Array(6).fill('')); // Clear OTP fields\r\n    } else {\r\n      setOtpError(false);\r\n      setOtpVisible(false); // Hide OTP fields\r\n      setEmailVerified(true); // Mark email as verified\r\n      setErrors((prevErrors) => ({ ...prevErrors, email: undefined })); // Clear email error\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    validate()\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (timer > 0) {\r\n      const intervalId = setInterval(() => {\r\n        setTimer((prevTimer) => prevTimer - 1);\r\n      }, 1000);\r\n      return () => clearInterval(intervalId);\r\n    }\r\n  }, [timer]);\r\n\r\n  const validate = () => {\r\n    let valid = true;\r\n    const errors: { email?: string; } = {};\r\n\r\n\r\n    if (!email) {\r\n      errors.email = 'Email is required';\r\n      valid = false;\r\n    } else if (!/\\S+@\\S+\\.\\S+/.test(email)) {\r\n      errors.email = 'Email is invalid';\r\n      valid = false;\r\n    } else if (!emailVerified) {\r\n      errors.email = 'Verify Email first!'; // No specific error message needed here\r\n      valid = false;\r\n    }\r\n\r\n    setErrors(errors);\r\n    return valid;\r\n  };\r\n\r\n  const handleInputChange = (setter: React.Dispatch<React.SetStateAction<string>>, field: keyof typeof errors) => (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setter(e.target.value);\r\n    setErrors((prevErrors) => ({\r\n      ...prevErrors,\r\n      [field]: undefined,\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    if (validate()) {\r\n      try {\r\n        setSubmitting(true);\r\n        const data = {\r\n          email: email,\r\n          password: \"\",\r\n        }\r\n        const response = await fetch('/api/auth/otpsignin', {\r\n          method: 'POST',\r\n          body: JSON.stringify(data),\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          }\r\n        }).then(d => d.json());\r\n        if (response.success) {\r\n          localStorage.setItem('incomingToast', 'Successfully signed in!');\r\n          if (response.data === \"admin\")\r\n            window.location.href = '/dashboard/home';\r\n          else window.location.href = \"/\";\r\n        } else {\r\n          setSubmitting(false);\r\n          toast.error(response.message, {\r\n            position: 'top-center',\r\n            style: {\r\n              fontSize: '12px',\r\n              padding: '8px',\r\n              borderRadius: '5px',\r\n            }\r\n          });\r\n        }\r\n\r\n      } catch (error) {\r\n        setSubmitting(false);\r\n        toast.error(\"Failed\", {\r\n          position: 'top-center',\r\n          style: {\r\n            fontSize: '12px',\r\n            padding: '8px',\r\n            borderRadius: '5px',\r\n          }\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    (\r\n      <div className=\"flex flex-col min-h-screen md:flex-row\">\r\n        <div className=\"relative w-full md:w-1/2 bg-gray-100\">\r\n          <Image\r\n            src=\"/image1.png\"\r\n            alt=\"Sign Up Image\"\r\n            layout=\"fill\"\r\n            objectFit=\"cover\"\r\n            objectPosition=\"left\" // Keeps the left side in focus\r\n            className=\"absolute inset-0\"\r\n          />\r\n        </div>\r\n\r\n        <div className=\"flex items-center justify-center w-full bg-gray-100 md:w-1/2\">\r\n          <div className=\"w-full max-w-md p-8 bg-white rounded-lg shadow-lg\">\r\n            <h2 className=\"mb-6 text-2xl font-bold text-gray-800\">Sign in with OTP</h2>\r\n            <div>\r\n              {/*Email*/}\r\n              <div className=\"mb-4\">\r\n                <label className=\"block text-gray-700\">Email</label>\r\n                <input\r\n                  type=\"email\"\r\n                  value={email}\r\n                  onChange={handleEmailChange}\r\n                  disabled={otpVisible}\r\n                  className=\"w-full px-3 py-2 border rounded-lg shadow-sm focus:outline-none focus:ring focus:border-blue-300 text-black\"\r\n                />\r\n                {errors.email && errors.email !== 'Verify Email first!' && (\r\n                  <p className=\"mt-2 text-sm text-red-500\">{errors.email}</p>\r\n                )}\r\n                {errors.email === \"Verify Email first!\" && email && !emailVerified && (\r\n                  <div>\r\n                    {/* <p className=\"mt-2 text-sm text-red-500\">{errors.email}</p> */}\r\n                    <a href=\"#\" onClick={handleOtpVisibility}>\r\n                      <p className=\"mt-2 text-slate-500 hover:underline\">Verify Email with OTP</p>\r\n                    </a>\r\n                  </div>\r\n                )}\r\n                {emailVerified && (\r\n                  <p className=\"mt-2 text-sm text-green-500\">Verified Email âœ“</p>\r\n                )}\r\n                {otpVisible && (\r\n                  <div className=\"mt-4\">\r\n                    <div className=\"flex justify-center space-x-2 mb-4\">\r\n                      {otp.map((value, index) => (\r\n                        <input\r\n                          key={index}\r\n                          type=\"text\"\r\n                          maxLength={1}\r\n                          value={value}\r\n                          onChange={(e) => handleOtpChange(e.target, index)}\r\n                          onKeyDown={(e) => handleOtpKeyDown(e, index)}\r\n                          className=\"w-10 px-3 py-2 border rounded-lg shadow-sm focus:outline-none focus:ring focus:border-blue-300 text-black text-center\"\r\n                        />\r\n                      ))}\r\n                    </div>\r\n                    <div className=\"flex justify-center items-center space-x-2\">\r\n                      <button\r\n                        className=\"bg-slate-500 font-semibold text-white py-2 px-4 rounded-lg hover:bg-slate-600 transition duration-300\"\r\n                        onClick={handleOtpSubmit}\r\n                      >\r\n                        {otpButton ? 'OTP Resend' : 'Verify'}\r\n                      </button>\r\n                      <span className=\"text-gray-500\">\r\n                        {timer > 0 ? `Time remaining: ${timer}s` : <button className=\"bg-slate-500 font-semibold text-white py-2 px-4 rounded-lg hover:bg-slate-600 transition duration-300\"\r\n                          onClick={handleResendOtp}>Resend OTP</button>}\r\n                      </span>\r\n                    </div>\r\n                    {otpError && (\r\n                      <p className=\"mt-2 text-sm text-red-500\">OTP is incorrect. Please try again.</p>\r\n                    )}\r\n                  </div>\r\n                )}\r\n              </div>\r\n              {/*Submit Button*/}\r\n              <div>\r\n                <button\r\n                  onClick={handleSubmit}\r\n                  disabled={isSubmitting || !emailVerified}\r\n                  className=\"w-full px-4 py-2 text-white bg-slate-500 rounded-lg shadow hover:bg-slate-600 hover:cursor-pointer focus:outline-none focus:ring focus:ring-blue-300\"\r\n                >\r\n                  {isSubmitting ? (<><Spinner /></>) : emailVerified ? (<>Sign In</>) : email ? (<>Verify Your Email</>) : (<>Sign In</>)}\r\n                </button>\r\n                {!emailVerified && email && (\r\n                  <p className=\"mt-2 text-sm text-red-500\">Please, Verify Email with OTP first!</p>\r\n                )}\r\n              </div>\r\n              {/*Sign Up link*/}\r\n              <p className=\"mt-4 text-center text-gray-600\">\r\n                Don&apos;t have an account?{' '}\r\n                <a href=\"/auth/signup\">\r\n                  <span className=\"text-slate-500 hover:underline\">Sign Up</span>\r\n                </a>\r\n              </p>\r\n              <p className=\"mt-4 text-center text-gray-600\">\r\n                Try a different method?{' '}\r\n                <a href=\"/auth/signin\">\r\n                  <span className=\"text-slate-500 hover:underline\">Sign In</span>\r\n                </a>\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <Toaster />\r\n      </div>)\r\n  );\r\n};\r\n\r\nexport const navItems: any = [];\r\n\r\nexport default SignInOTP;"],"names":[],"mappings":"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"}},
    {"offset": {"line": 565, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}