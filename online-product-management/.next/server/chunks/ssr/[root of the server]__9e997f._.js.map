{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Medkart/Project1/Assignment1/online-product-management/src/components/Dashboard/Orders/AdminOrders.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { format } from \"date-fns\";\r\nimport { FaChevronDown, FaChevronUp } from \"react-icons/fa\"; // React Icons\r\nimport { error } from \"console\";\r\n\r\ninterface OrderItem {\r\n  product: {\r\n    name: string;\r\n    price: number;\r\n  };\r\n  quantity: number;\r\n  unitPrice: number;\r\n  totalPrice: number;\r\n}\r\n\r\ninterface Order {\r\n  orderId: number;\r\n  user: {\r\n    name: string;\r\n  };\r\n  createdAt: string;\r\n  status: \"PENDING\" | \"PROCESSING\" | \"DELIVERED\";\r\n  paymentStatus: \"PENDING\" | \"COMPLETED\";\r\n  totalAmount: number;\r\n  orderItems: OrderItem[]; // Add orderItems for detailed data\r\n}\r\n\r\ninterface DashboardStats {\r\n  ordersToday: number;\r\n  pendingOrders: number;\r\n  totalSalesToday: number;\r\n  pendingPayments: number;\r\n  mostPurchasedProduct: { name: string; quantity: number } | null;\r\n}\r\n\r\nconst AdminOrdersPage: React.FC = () => {\r\n  const [orders, setOrders] = useState<Order[]>([]);\r\n  const [dashboardStats, setDashboardStats] = useState<DashboardStats | null>(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [activeOrderId, setActiveOrderId] = useState<number | null>(null); // Track which order is expanded\r\n  const ordersPerPage = 5;\r\n\r\n  useEffect(() => {\r\n    const fetchOrders = async () => {\r\n      try {\r\n        const [ordersRes, statsRes] = await Promise.all([\r\n          fetch(\"/api/admin/orders\"),\r\n          fetch(\"/api/admin/orders/stats\"),\r\n        ]);\r\n\r\n        if (ordersRes.ok && statsRes.ok) {\r\n          const ordersData = await ordersRes.json();\r\n          const statsData = await statsRes.json();\r\n\r\n          setOrders(ordersData.orders);\r\n          setDashboardStats(statsData.stats);\r\n        } else {\r\n          console.error(\"Failed to fetch orders or stats\");\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchOrders();\r\n  }, []);\r\n\r\n  const updateOrder = async (\r\n    orderId: number,\r\n    field: \"status\" | \"paymentStatus\",\r\n    value: string\r\n  ) => {\r\n    try {\r\n      const response = await fetch(`/api/admin/orders/${orderId}`, {\r\n        method: \"PATCH\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ [field]: value }),\r\n      });\r\n\r\n      if (response.ok) {\r\n        setOrders((prevOrders) =>\r\n          prevOrders.map((order) =>\r\n            order.orderId === orderId ? { ...order, [field]: value } : order\r\n          )\r\n        );\r\n      } else {\r\n        console.error(\"Failed to update order.\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error updating order:\", error);\r\n    }\r\n  };\r\n\r\n  const toggleOrderDetails = async (orderId: number) => {\r\n    if (activeOrderId === orderId) {\r\n      setActiveOrderId(null);\r\n    } else {\r\n      setIsLoading(true);\r\n      const response = await fetch(`/api/admin/orders/${orderId}`);\r\n      const data = await response.json();\r\n      console.log(data);\r\n\r\n      if (response.ok) {\r\n        setOrders((prevOrders) =>\r\n          prevOrders.map((order) =>\r\n            order.orderId === orderId\r\n              ? { ...order, orderItems: data.order.orderItems }\r\n              : order\r\n          )\r\n        );\r\n        setActiveOrderId(orderId);\r\n      } else {\r\n        if (error instanceof Error){\r\n            console.log(\"Error: \", error.stack)\r\n        }\r\n        console.error(\"Error fetching full order details\");\r\n      }\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const paginatedOrders = orders.slice(\r\n    (currentPage - 1) * ordersPerPage,\r\n    currentPage * ordersPerPage\r\n  );\r\n\r\n  return (\r\n    <div className=\"max-w-7xl mx-auto p-6\">\r\n      <h2 className=\"text-3xl font-bold text-gray-900 mb-6\">\r\n        Admin Orders Dashboard\r\n      </h2>\r\n\r\n      {dashboardStats && (\r\n        <div className=\"grid grid-cols-1 md:grid-cols-5 gap-4 mb-8\">\r\n          <div className=\"bg-blue-500 text-white p-6 rounded-lg shadow-md text-center hover:bg-blue-600 transition-all\">\r\n            <h4 className=\"text-lg font-semibold\">Orders Today</h4>\r\n            <p className=\"text-3xl\">{dashboardStats.ordersToday}</p>\r\n          </div>\r\n          <div className=\"bg-yellow-500 text-white p-6 rounded-lg shadow-md text-center hover:bg-yellow-600 transition-all\">\r\n            <h4 className=\"text-lg font-semibold\">Pending Orders</h4>\r\n            <p className=\"text-3xl\">{dashboardStats.pendingOrders}</p>\r\n          </div>\r\n          <div className=\"bg-green-500 text-white p-6 rounded-lg shadow-md text-center hover:bg-green-600 transition-all\">\r\n            <h4 className=\"text-lg font-semibold\">Total Sales Today</h4>\r\n            <p className=\"text-3xl\">${dashboardStats.totalSalesToday}</p>\r\n          </div>\r\n          <div className=\"bg-red-500 text-white p-6 rounded-lg shadow-md text-center hover:bg-red-600 transition-all\">\r\n            <h4 className=\"text-lg font-semibold\">Pending Payments</h4>\r\n            <p className=\"text-3xl\">${dashboardStats.pendingPayments}</p>\r\n          </div>\r\n          {dashboardStats.mostPurchasedProduct && (\r\n            <div className=\"bg-purple-500 text-white p-6 rounded-lg shadow-md text-center hover:bg-purple-600 transition-all\">\r\n              <h4 className=\"text-lg font-semibold\">Most Purchased Product</h4>\r\n              <p>\r\n                {dashboardStats.mostPurchasedProduct.name} (\r\n                {dashboardStats.mostPurchasedProduct.quantity})\r\n              </p>\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n\r\n      {isLoading ? (\r\n        <p>Loading orders...</p>\r\n      ) : (\r\n        <div>\r\n          {paginatedOrders.map((order) => (\r\n            <div\r\n              key={order.orderId}\r\n              className=\"bg-white rounded-lg shadow-md p-4 mb-4 cursor-pointer hover:shadow-lg transition-all\"\r\n              onClick={() => toggleOrderDetails(order.orderId)}\r\n            >\r\n              <div className=\"flex justify-between items-center\">\r\n                <div>\r\n                  <p className=\"font-bold text-lg\">\r\n                    Order #{order.orderId} - {order.user.name}\r\n                  </p>\r\n                  <p className=\"text-sm text-gray-600\">\r\n                    {format(new Date(order.createdAt), \"PPPPpp\")}\r\n                  </p>\r\n                </div>\r\n                <div className=\"flex gap-4 items-center\">\r\n                  <select\r\n                    value={order.status}\r\n                    onChange={(e) =>\r\n                      updateOrder(order.orderId, \"status\", e.target.value)\r\n                    }\r\n                    className=\"border rounded px-3 py-1 bg-gray-50 hover:bg-gray-100 transition-all\"\r\n                  >\r\n                    <option value=\"PENDING\">PENDING</option>\r\n                    <option value=\"PROCESSING\">PROCESSING</option>\r\n                    <option value=\"DELIVERED\">DELIVERED</option>\r\n                  </select>\r\n                  <select\r\n                    value={order.paymentStatus}\r\n                    onChange={(e) =>\r\n                      updateOrder(order.orderId, \"paymentStatus\", e.target.value)\r\n                    }\r\n                    className=\"border rounded px-3 py-1 bg-gray-50 hover:bg-gray-100 transition-all\"\r\n                  >\r\n                    <option value=\"PENDING\">PENDING</option>\r\n                    <option value=\"COMPLETED\">COMPLETED</option>\r\n                  </select>\r\n                </div>\r\n              </div>\r\n\r\n              {activeOrderId === order.orderId && (\r\n                <div className=\"mt-4 p-4 bg-gray-50 rounded-md\">\r\n                  <h3 className=\"font-bold text-lg\">Order Details</h3>\r\n                  <ul>\r\n                    {order.orderItems.map((item, index) => (\r\n                      <li key={index} className=\"border-b py-2\">\r\n                        <p className=\"font-semibold\">{item.product.name}</p>\r\n                        <p>Price: ${item.unitPrice}</p>\r\n                        <p>Quantity: {item.quantity}</p>\r\n                        <p>Total: ${item.totalPrice}</p>\r\n                      </li>\r\n                    ))}\r\n                  </ul>\r\n                </div>\r\n              )}\r\n\r\n              {activeOrderId === order.orderId ? (\r\n                <FaChevronUp className=\"mt-2 text-gray-600\" />\r\n              ) : (\r\n                <FaChevronDown className=\"mt-2 text-gray-600\" />\r\n              )}\r\n            </div>\r\n          ))}\r\n\r\n          <div className=\"flex justify-between mt-4\">\r\n            <button\r\n              disabled={currentPage === 1}\r\n              onClick={() => setCurrentPage((prev) => prev - 1)}\r\n              className=\"px-4 py-2 bg-black text-white rounded disabled:opacity-50 hover:bg-gray-800 transition-all\"\r\n            >\r\n              Previous\r\n            </button>\r\n            <span className=\"text-lg font-semibold\">{currentPage}</span>\r\n            <button\r\n              disabled={currentPage === Math.ceil(orders.length / ordersPerPage)}\r\n              onClick={() => setCurrentPage((prev) => prev + 1)}\r\n              className=\"px-4 py-2 bg-black text-white rounded disabled:opacity-50 hover:bg-gray-800 transition-all\"\r\n            >\r\n              Next\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminOrdersPage;\r\n"],"names":[],"mappings":";;;;AAEA;AAGA;AAFA;AACA,qPAA6D,cAAc;AAJ3E;;;;;;AAqCA,MAAM,kBAA4B;IAChC,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAW,EAAE;IAChD,MAAM,CAAC,gBAAgB,kBAAkB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAyB;IAC5E,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC3C,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC/C,MAAM,CAAC,eAAe,iBAAiB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAiB,OAAO,gCAAgC;IACzG,MAAM,gBAAgB;IAEtB,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,cAAc;YAClB,IAAI;gBACF,MAAM,CAAC,WAAW,SAAS,GAAG,MAAM,QAAQ,GAAG,CAAC;oBAC9C,MAAM;oBACN,MAAM;iBACP;gBAED,IAAI,UAAU,EAAE,IAAI,SAAS,EAAE,EAAE;oBAC/B,MAAM,aAAa,MAAM,UAAU,IAAI;oBACvC,MAAM,YAAY,MAAM,SAAS,IAAI;oBAErC,UAAU,WAAW,MAAM;oBAC3B,kBAAkB,UAAU,KAAK;gBACnC,OAAO;oBACL,QAAQ,KAAK,CAAC;gBAChB;YACF,EAAE,OAAO,OAAO;gBACd,QAAQ,KAAK,CAAC,wBAAwB;YACxC,SAAU;gBACR,aAAa;YACf;QACF;QAEA;IACF,GAAG,EAAE;IAEL,MAAM,cAAc,OAClB,SACA,OACA;QAEA,IAAI;YACF,MAAM,WAAW,MAAM,MAAM,CAAC,kBAAkB,EAAE,SAAS,EAAE;gBAC3D,QAAQ;gBACR,SAAS;oBAAE,gBAAgB;gBAAmB;gBAC9C,MAAM,KAAK,SAAS,CAAC;oBAAE,CAAC,MAAM,EAAE;gBAAM;YACxC;YAEA,IAAI,SAAS,EAAE,EAAE;gBACf,UAAU,CAAC,aACT,WAAW,GAAG,CAAC,CAAC,QACd,MAAM,OAAO,KAAK,UAAU;4BAAE,GAAG,KAAK;4BAAE,CAAC,MAAM,EAAE;wBAAM,IAAI;YAGjE,OAAO;gBACL,QAAQ,KAAK,CAAC;YAChB;QACF,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,yBAAyB;QACzC;IACF;IAEA,MAAM,qBAAqB,OAAO;QAChC,IAAI,kBAAkB,SAAS;YAC7B,iBAAiB;QACnB,OAAO;YACL,aAAa;YACb,MAAM,WAAW,MAAM,MAAM,CAAC,kBAAkB,EAAE,SAAS;YAC3D,MAAM,OAAO,MAAM,SAAS,IAAI;YAChC,QAAQ,GAAG,CAAC;YAEZ,IAAI,SAAS,EAAE,EAAE;gBACf,UAAU,CAAC,aACT,WAAW,GAAG,CAAC,CAAC,QACd,MAAM,OAAO,KAAK,UACd;4BAAE,GAAG,KAAK;4BAAE,YAAY,KAAK,KAAK,CAAC,UAAU;wBAAC,IAC9C;gBAGR,iBAAiB;YACnB,OAAO;gBACL,IAAI,uGAAA,CAAA,QAAK,YAAY,OAAM;oBACvB,QAAQ,GAAG,CAAC,WAAW,uGAAA,CAAA,QAAK,CAAC,KAAK;gBACtC;gBACA,QAAQ,KAAK,CAAC;YAChB;YACA,aAAa;QACf;IACF;IAEA,MAAM,kBAAkB,OAAO,KAAK,CAClC,CAAC,cAAc,CAAC,IAAI,eACpB,cAAc;IAGhB,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAG,WAAU;0BAAwC;;;;;;YAIrD,gCACC,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCAAG,WAAU;0CAAwB;;;;;;0CACtC,8OAAC;gCAAE,WAAU;0CAAY,eAAe,WAAW;;;;;;;;;;;;kCAErD,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCAAG,WAAU;0CAAwB;;;;;;0CACtC,8OAAC;gCAAE,WAAU;0CAAY,eAAe,aAAa;;;;;;;;;;;;kCAEvD,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCAAG,WAAU;0CAAwB;;;;;;0CACtC,8OAAC;gCAAE,WAAU;;oCAAW;oCAAE,eAAe,eAAe;;;;;;;;;;;;;kCAE1D,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCAAG,WAAU;0CAAwB;;;;;;0CACtC,8OAAC;gCAAE,WAAU;;oCAAW;oCAAE,eAAe,eAAe;;;;;;;;;;;;;oBAEzD,eAAe,oBAAoB,kBAClC,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCAAG,WAAU;0CAAwB;;;;;;0CACtC,8OAAC;;oCACE,eAAe,oBAAoB,CAAC,IAAI;oCAAC;oCACzC,eAAe,oBAAoB,CAAC,QAAQ;oCAAC;;;;;;;;;;;;;;;;;;;YAOvD,0BACC,8OAAC;0BAAE;;;;;qCAEH,8OAAC;;oBACE,gBAAgB,GAAG,CAAC,CAAC,sBACpB,8OAAC;4BAEC,WAAU;4BACV,SAAS,IAAM,mBAAmB,MAAM,OAAO;;8CAE/C,8OAAC;oCAAI,WAAU;;sDACb,8OAAC;;8DACC,8OAAC;oDAAE,WAAU;;wDAAoB;wDACvB,MAAM,OAAO;wDAAC;wDAAI,MAAM,IAAI,CAAC,IAAI;;;;;;;8DAE3C,8OAAC;oDAAE,WAAU;8DACV,CAAA,GAAA,qJAAA,CAAA,SAAM,AAAD,EAAE,IAAI,KAAK,MAAM,SAAS,GAAG;;;;;;;;;;;;sDAGvC,8OAAC;4CAAI,WAAU;;8DACb,8OAAC;oDACC,OAAO,MAAM,MAAM;oDACnB,UAAU,CAAC,IACT,YAAY,MAAM,OAAO,EAAE,UAAU,EAAE,MAAM,CAAC,KAAK;oDAErD,WAAU;;sEAEV,8OAAC;4DAAO,OAAM;sEAAU;;;;;;sEACxB,8OAAC;4DAAO,OAAM;sEAAa;;;;;;sEAC3B,8OAAC;4DAAO,OAAM;sEAAY;;;;;;;;;;;;8DAE5B,8OAAC;oDACC,OAAO,MAAM,aAAa;oDAC1B,UAAU,CAAC,IACT,YAAY,MAAM,OAAO,EAAE,iBAAiB,EAAE,MAAM,CAAC,KAAK;oDAE5D,WAAU;;sEAEV,8OAAC;4DAAO,OAAM;sEAAU;;;;;;sEACxB,8OAAC;4DAAO,OAAM;sEAAY;;;;;;;;;;;;;;;;;;;;;;;;gCAK/B,kBAAkB,MAAM,OAAO,kBAC9B,8OAAC;oCAAI,WAAU;;sDACb,8OAAC;4CAAG,WAAU;sDAAoB;;;;;;sDAClC,8OAAC;sDACE,MAAM,UAAU,CAAC,GAAG,CAAC,CAAC,MAAM,sBAC3B,8OAAC;oDAAe,WAAU;;sEACxB,8OAAC;4DAAE,WAAU;sEAAiB,KAAK,OAAO,CAAC,IAAI;;;;;;sEAC/C,8OAAC;;gEAAE;gEAAS,KAAK,SAAS;;;;;;;sEAC1B,8OAAC;;gEAAE;gEAAW,KAAK,QAAQ;;;;;;;sEAC3B,8OAAC;;gEAAE;gEAAS,KAAK,UAAU;;;;;;;;mDAJpB;;;;;;;;;;;;;;;;gCAWhB,kBAAkB,MAAM,OAAO,iBAC9B,8OAAC,8IAAA,CAAA,cAAW;oCAAC,WAAU;;;;;yDAEvB,8OAAC,8IAAA,CAAA,gBAAa;oCAAC,WAAU;;;;;;;2BAzDtB,MAAM,OAAO;;;;;kCA8DtB,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCACC,UAAU,gBAAgB;gCAC1B,SAAS,IAAM,eAAe,CAAC,OAAS,OAAO;gCAC/C,WAAU;0CACX;;;;;;0CAGD,8OAAC;gCAAK,WAAU;0CAAyB;;;;;;0CACzC,8OAAC;gCACC,UAAU,gBAAgB,KAAK,IAAI,CAAC,OAAO,MAAM,GAAG;gCACpD,SAAS,IAAM,eAAe,CAAC,OAAS,OAAO;gCAC/C,WAAU;0CACX;;;;;;;;;;;;;;;;;;;;;;;;AAQb;uCAEe"}},
    {"offset": {"line": 522, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}