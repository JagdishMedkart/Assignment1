{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Medkart/Project1/Assignment1/online-product-management/src/components/Dashboard/TopNavbar.tsx"],"sourcesContent":["import { cookies } from 'next/headers';\r\nimport React from 'react';\r\nimport { FaAngleRight } from 'react-icons/fa';\r\nimport prisma from '../../../prisma/client';\r\nimport { FaUserCircle } from \"react-icons/fa\";\r\n\r\nasync function TopNavBar({ title, breadcrumbs }: { title: string, breadcrumbs: { display: string, link: string }[] }) {\r\n  const sess = (await cookies()).get('session-us')?.value;\r\n  if (sess == null)\r\n    return <></>\r\n  const usr = await prisma.user.findFirst({\r\n    where: {\r\n      sessions: {\r\n        some: {\r\n          sessionToken: sess\r\n        }\r\n      }\r\n    },\r\n    select: {\r\n      name: true\r\n    }\r\n  });\r\n  return (\r\n    <nav className=\"bg-slate-50 shadow-sm p-2\">\r\n      <div className=\"container flex flex-col\">\r\n        <div className=\"text-black text-xl flex align-middle  justify-between \">\r\n          <div className=''>{title}</div>\r\n          <div className=\"text-sm mr-5 flex italic mt-1\">{usr?.name} <FaUserCircle className='ml-3' size={23}/></div>\r\n        </div>\r\n        <div className=\"flex flex-row items-center\">{\r\n          breadcrumbs.map((crumb, idx) => {\r\n            return <><a href={crumb.link} key={idx} className=\"text-black p-1 text-sm\">{crumb.display}</a> {idx !== breadcrumbs.length - 1 ? <FaAngleRight /> : <></>}</>\r\n          })\r\n        }</div>\r\n      </div>\r\n    </nav>\r\n  )\r\n};\r\nexport default TopNavBar"],"names":[],"mappings":";;;;AAAA;AAGA;AACA;;;;;;AAEA,eAAe,UAAU,EAAE,KAAK,EAAE,WAAW,EAAuE;IAClH,MAAM,OAAO,CAAC,MAAM,CAAA,GAAA,+HAAA,CAAA,UAAO,AAAD,GAAG,EAAE,GAAG,CAAC,eAAe;IAClD,IAAI,QAAQ,MACV,qBAAO;IACT,MAAM,MAAM,MAAM,gHAAA,CAAA,UAAM,CAAC,IAAI,CAAC,SAAS,CAAC;QACtC,OAAO;YACL,UAAU;gBACR,MAAM;oBACJ,cAAc;gBAChB;YACF;QACF;QACA,QAAQ;YACN,MAAM;QACR;IACF;IACA,qBACE,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YAAI,WAAU;;8BACb,8OAAC;oBAAI,WAAU;;sCACb,8OAAC;4BAAI,WAAU;sCAAI;;;;;;sCACnB,8OAAC;4BAAI,WAAU;;gCAAiC,KAAK;gCAAK;8CAAC,8OAAC,8IAAA,CAAA,eAAY;oCAAC,WAAU;oCAAO,MAAM;;;;;;;;;;;;;;;;;;8BAElG,8OAAC;oBAAI,WAAU;8BACb,YAAY,GAAG,CAAC,CAAC,OAAO;wBACtB,qBAAO;;8CAAE,8OAAC;oCAAE,MAAM,MAAM,IAAI;oCAAY,WAAU;8CAA0B,MAAM,OAAO;mCAAtD;;;;;gCAA2D;gCAAE,QAAQ,YAAY,MAAM,GAAG,kBAAI,8OAAC,8IAAA,CAAA,eAAY;;;;yDAAM;;;oBACtJ;;;;;;;;;;;;;;;;;AAKV;uCACe"}},
    {"offset": {"line": 116, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 122, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Medkart/Project1/Assignment1/online-product-management/src/components/Dashboard/Products/ProductDataDashboard.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/components/Dashboard/Products/ProductDataDashboard.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/Dashboard/Products/ProductDataDashboard.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA8T,GAC3V,4FACA"}},
    {"offset": {"line": 130, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 136, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Medkart/Project1/Assignment1/online-product-management/src/components/Dashboard/Products/ProductDataDashboard.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/components/Dashboard/Products/ProductDataDashboard.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/Dashboard/Products/ProductDataDashboard.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA0S,GACvU,wEACA"}},
    {"offset": {"line": 144, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 150, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 154, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 160, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Medkart/Project1/Assignment1/online-product-management/src/components/Dashboard/Products/ProductBuilder.tsx"],"sourcesContent":["//\"use client\";\r\n\r\nimport React, { useState } from \"react\";\r\nimport { AiOutlinePlusCircle } from \"react-icons/ai\";\r\nimport { IoCloseSharp } from \"react-icons/io5\";\r\nimport toast, { Toaster } from \"react-hot-toast\";\r\n\r\nconst ProductBuilder: React.FC = () => {\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [name, setName] = useState(\"\");\r\n  const [wsCode, setWsCode] = useState(\"\");\r\n  const [salesPrice, setSalesPrice] = useState(\"\");\r\n  const [mrp, setMrp] = useState(\"\");\r\n  const [packageSize, setPackageSize] = useState(\"\");\r\n  const [categoryId, setCategoryId] = useState(\"\");\r\n  const [tags, setTags] = useState<string[]>([]);\r\n  const [images, setImages] = useState<File[]>([]);\r\n  const [categories, setCategories] = useState<{ id: number; name: string }[]>([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const resetForm = () => {\r\n    setName(\"\");\r\n    setWsCode(\"\");\r\n    setSalesPrice(\"\");\r\n    setMrp(\"\");\r\n    setPackageSize(\"\");\r\n    setCategoryId(\"\");\r\n    setTags([]);\r\n    setImages([]);\r\n  };\r\n\r\n  const fetchCategories = async () => {\r\n    try {\r\n      const response = await fetch(\"/api/categories\");\r\n      const data = await response.json();\r\n      if (data.success) setCategories(data.categories);\r\n      else toast.error(\"Failed to load categories.\");\r\n    } catch (error) {\r\n      console.error(\"Error fetching categories:\", error);\r\n      toast.error(\"Error fetching categories.\");\r\n    }\r\n  };\r\n\r\n  const handleAddProduct = async () => {\r\n    if (!name || !wsCode || !salesPrice || !mrp || !packageSize || !categoryId) {\r\n      toast.error(\"Please fill all required fields!\");\r\n      return;\r\n    }\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"name\", name);\r\n    formData.append(\"wsCode\", wsCode);\r\n    formData.append(\"salesPrice\", salesPrice);\r\n    formData.append(\"mrp\", mrp);\r\n    formData.append(\"packageSize\", packageSize);\r\n    formData.append(\"categoryId\", categoryId);\r\n    tags.forEach((tag) => formData.append(\"tags\", tag));\r\n    images.forEach((image) => formData.append(\"images\", image));\r\n\r\n    setLoading(true);\r\n\r\n    console.log(formData);\r\n\r\n    try {\r\n      const response = await fetch(\"/api/products\", {\r\n        method: \"POST\",\r\n        body: formData,\r\n      });\r\n\r\n      const data = await response.json();\r\n      if (data.success) {\r\n        toast.success(\"Product added successfully!\");\r\n        setIsModalOpen(false);\r\n        resetForm();\r\n      } else {\r\n        toast.error(data.message || \"Failed to add product\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error adding product:\", error);\r\n      toast.error(\"An error occurred.\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"max-w-4xl mx-auto\">\r\n      <Toaster position=\"top-center\" reverseOrder={false} />\r\n      <button\r\n        className=\"flex items-center justify-center w-full p-6 bg-gradient-to-r from-blue-500 to-purple-600 text-white rounded-xl shadow-md hover:shadow-lg transition duration-300\"\r\n        onClick={() => {\r\n          setIsModalOpen(true);\r\n          fetchCategories();\r\n        }}\r\n      >\r\n        <AiOutlinePlusCircle size={30} className=\"mr-3\" />\r\n        Add New Product\r\n      </button>\r\n\r\n      {isModalOpen && (\r\n        <div className=\"fixed inset-0 z-50 bg-black bg-opacity-50 flex items-center justify-center\">\r\n          <div className=\"bg-white rounded-lg p-6 shadow-lg w-[90%] max-w-md relative text-black\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"absolute top-3 right-3 text-gray-400 hover:text-black\"\r\n              onClick={() => setIsModalOpen(false)}\r\n            >\r\n              <IoCloseSharp size={24} />\r\n            </button>\r\n            <h2 className=\"text-2xl font-bold text-center mb-6\">Add New Product</h2>\r\n            <form\r\n              onSubmit={(e) => {\r\n                e.preventDefault();\r\n                handleAddProduct();\r\n              }}\r\n              className=\"space-y-4\"\r\n            >\r\n              <div className=\"space-y-2\">\r\n                <label className=\"block text-sm font-medium text-black\">Product Name</label>\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Enter product name\"\r\n                  value={name}\r\n                  onChange={(e) => setName(e.target.value)}\r\n                  className=\"input input-bordered w-full text-black\"\r\n                />\r\n              </div>\r\n              <div className=\"space-y-2\">\r\n                <label className=\"block text-sm font-medium text-black\">WS Code</label>\r\n                <input\r\n                  type=\"number\"\r\n                  placeholder=\"Enter unique WS code\"\r\n                  value={wsCode}\r\n                  onChange={(e) => setWsCode(e.target.value)}\r\n                  className=\"input input-bordered w-full text-black\"\r\n                />\r\n              </div>\r\n              <div className=\"space-y-2\">\r\n                <label className=\"block text-sm font-medium text-black\">Sales Price</label>\r\n                <input\r\n                  type=\"number\"\r\n                  placeholder=\"Enter sales price\"\r\n                  value={salesPrice}\r\n                  onChange={(e) => setSalesPrice(e.target.value)}\r\n                  className=\"input input-bordered w-full text-black\"\r\n                />\r\n              </div>\r\n              <div className=\"space-y-2\">\r\n                <label className=\"block text-sm font-medium text-black\">MRP</label>\r\n                <input\r\n                  type=\"number\"\r\n                  placeholder=\"Enter MRP\"\r\n                  value={mrp}\r\n                  onChange={(e) => setMrp(e.target.value)}\r\n                  className=\"input input-bordered w-full text-black\"\r\n                />\r\n              </div>\r\n              <div className=\"space-y-2\">\r\n                <label className=\"block text-sm font-medium text-black\">Package Size</label>\r\n                <input\r\n                  type=\"number\"\r\n                  placeholder=\"Enter package size\"\r\n                  value={packageSize}\r\n                  onChange={(e) => setPackageSize(e.target.value)}\r\n                  className=\"input input-bordered w-full text-black\"\r\n                />\r\n              </div>\r\n              <div className=\"space-y-2\">\r\n                <label className=\"block text-sm font-medium text-black\">Category</label>\r\n                <select\r\n                  value={categoryId}\r\n                  onChange={(e) => setCategoryId(e.target.value)}\r\n                  className=\"select select-bordered w-full text-black\"\r\n                >\r\n                  <option value=\"\">Select Category</option>\r\n                  {categories.map((category) => (\r\n                    <option key={category.id} value={category.id}>\r\n                      {category.name}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n              </div>\r\n              <div className=\"space-y-2\">\r\n                <label className=\"block text-sm font-medium text-black\">Images</label>\r\n                <input\r\n                  type=\"file\"\r\n                  multiple\r\n                  accept=\".png, .jpeg, .webp\"\r\n                  onChange={(e) =>\r\n                    setImages(e.target.files ? Array.from(e.target.files) : [])\r\n                  }\r\n                  className=\"file-input file-input-bordered w-full text-black\"\r\n                />\r\n              </div>\r\n              <div className=\"space-y-2\">\r\n                <label className=\"block text-sm font-medium text-black\">Tags</label>\r\n                <textarea\r\n                  placeholder=\"Enter tags (comma-separated)\"\r\n                  value={tags.join(\", \")}\r\n                  onChange={(e) =>\r\n                    setTags(e.target.value.split(\",\").map((tag) => tag.trim()))\r\n                  }\r\n                  className=\"textarea textarea-bordered w-full text-black\"\r\n                />\r\n              </div>\r\n              <div className=\"flex justify-between mt-6\">\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-error w-1/2 mr-2\"\r\n                  onClick={() => {\r\n                    resetForm();\r\n                    setIsModalOpen(false);\r\n                  }}\r\n                >\r\n                  Cancel\r\n                </button>\r\n                <button\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary w-1/2 ml-2\"\r\n                  disabled={loading}\r\n                >\r\n                  {loading ? \"Adding...\" : \"Submit\"}\r\n                </button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductBuilder;\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 608, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 614, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Medkart/Project1/Assignment1/online-product-management/src/components/Dashboard/Products/ProductPage.tsx"],"sourcesContent":["import React from 'react'\r\nimport ProductDataDashBoard from './ProductDataDashboard';\r\nimport { cookies } from 'next/headers';\r\nimport prisma from '../../../../prisma/client';\r\nimport ProductBuilder from './ProductBuilder';\r\n\r\nexport default async function FormPage() {\r\n  const sess = (await cookies()).get('session-us')?.value;\r\n  if (sess == null)\r\n    return <></>\r\n  const usr = await prisma.user.findFirst({\r\n    where: {\r\n      sessions: {\r\n        some: {\r\n          sessionToken: sess\r\n        }\r\n      }\r\n    }\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <ProductBuilder />\r\n      <ProductDataDashBoard />\r\n    </div>\r\n  )\r\n}\r\n"],"names":[],"mappings":";;;;AACA;AACA;AACA;AACA;;;;;;AAEe,eAAe;IAC5B,MAAM,OAAO,CAAC,MAAM,CAAA,GAAA,+HAAA,CAAA,UAAO,AAAD,GAAG,EAAE,GAAG,CAAC,eAAe;IAClD,IAAI,QAAQ,MACV,qBAAO;IACT,MAAM,MAAM,MAAM,gHAAA,CAAA,UAAM,CAAC,IAAI,CAAC,SAAS,CAAC;QACtC,OAAO;YACL,UAAU;gBACR,MAAM;oBACJ,cAAc;gBAChB;YACF;QACF;IACF;IAEA,qBACE,8OAAC;;0BACC,8OAAC,6JAAA,CAAA,UAAc;;;;;0BACf,8OAAC,mKAAA,CAAA,UAAoB;;;;;;;;;;;AAG3B"}},
    {"offset": {"line": 658, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 664, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Medkart/Project1/Assignment1/online-product-management/src/app/dashboard/products/page.tsx"],"sourcesContent":["\r\nimport TopNavBar from '@/components/Dashboard/TopNavbar'\r\nimport ProductPage from \"../../../components/Dashboard/Products/ProductPage\"\r\nimport React from 'react'\r\n\r\nconst Products = () => {\r\n  return (\r\n    <>\r\n      <TopNavBar title='Forms' breadcrumbs={[]} />\r\n      <div className='overflow-y-scroll'>\r\n        <ProductPage />\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Products;\r\n"],"names":[],"mappings":";;;;AACA;AACA;;;;AAGA,MAAM,WAAW;IACf,qBACE;;0BACE,8OAAC,4IAAA,CAAA,UAAS;gBAAC,OAAM;gBAAQ,aAAa,EAAE;;;;;;0BACxC,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC,0JAAA,CAAA,UAAW;;;;;;;;;;;;AAIpB;uCAEe"}},
    {"offset": {"line": 700, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 712, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 714, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}