{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Medkart/Project1/Assignment1/online-product-management/src/app/cart/page.tsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useCart } from \"../../components/CartContext\";\r\nimport { useRouter } from \"next/navigation\";\r\nimport toast from \"react-hot-toast\";\r\n\r\nconst CartPage = () => {\r\n  const { cart, removeFromCart, addToCart } = useCart();\r\n  const [isProcessing, setIsProcessing] = useState(false);\r\n  const [quantities, setQuantities] = useState<{ [key: string]: number }>(\r\n    cart.reduce((acc, item) => ({ ...acc, [item.productId]: item.quantity }), {})\r\n  );\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [orderDetails, setOrderDetails] = useState<any[]>([]);\r\n  const router = useRouter();\r\n\r\n  // Handle quantity change input\r\n  const handleQuantityChange = (productId: string, newQuantity: number) => {\r\n    if (newQuantity < 1) {\r\n      removeFromCart(productId); // Remove item if quantity is less than 1\r\n    } else {\r\n      setQuantities((prev) => ({\r\n        ...prev,\r\n        [productId]: newQuantity,\r\n      }));\r\n    }\r\n  };\r\n\r\n  // Update cart based on the final quantities set by the user\r\n  const handlePlaceOrder = async () => {\r\n    // Check if user is logged in\r\n    const userLoggedIn = localStorage.getItem(\"user\"); // Example, replace with actual logic\r\n\r\n    if (!userLoggedIn) {\r\n      toast.error(\"Please log in first!\");\r\n      return;\r\n    }\r\n\r\n    // Update the cart quantities directly\r\n    setIsProcessing(true);\r\n    const updatedOrderDetails = cart.map((item) => {\r\n      const finalQuantity = quantities[item.productId] || item.quantity;\r\n      return {\r\n        productId: item.productId,\r\n        name: item.name,\r\n        price: item.price,\r\n        quantity: finalQuantity,\r\n        total: finalQuantity * item.price,\r\n      };\r\n    });\r\n    setOrderDetails(updatedOrderDetails);\r\n    setIsProcessing(false);\r\n\r\n    setIsModalOpen(true); // Open the modal after updating the cart\r\n  };\r\n\r\n  const handleModalClose = () => {\r\n    setIsModalOpen(false);\r\n  };\r\n\r\n  const handleOrderConfirm = () => {\r\n    // Logic to confirm the order (e.g., sending to the backend)\r\n    toast.success(\"Order placed successfully!\");\r\n    setIsModalOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"max-w-7xl mx-auto p-6\">\r\n      <h2 className=\"text-3xl font-bold text-gray-900 mb-6\">Your Cart</h2>\r\n      \r\n      {/* Display message if cart is empty */}\r\n      {cart.length === 0 ? (\r\n        <div className=\"text-center text-lg text-gray-500\">Your cart is empty</div>\r\n      ) : (\r\n        <div className=\"space-y-6\">\r\n          {cart.map((item) => (\r\n            <div key={item.productId} className=\"flex items-center justify-between p-4 bg-gray-50 rounded-lg shadow-md\">\r\n              <div className=\"flex items-center\">\r\n                <img src={item.image} alt={item.name} className=\"w-16 h-16 object-cover rounded-lg\" />\r\n                <div className=\"ml-4\">\r\n                  <h3 className=\"text-lg font-semibold\">{item.name}</h3>\r\n                  <p className=\"text-sm text-gray-500\">${item.price}</p>\r\n                </div>\r\n              </div>\r\n              <div className=\"flex items-center space-x-2\">\r\n                <input\r\n                  type=\"number\"\r\n                  value={quantities[item.productId] || item.quantity}\r\n                  onChange={(e) => handleQuantityChange(item.productId, parseInt(e.target.value, 10))}\r\n                  min=\"1\"\r\n                  className=\"w-16 p-2 border border-gray-300 rounded-lg text-center\"\r\n                />\r\n                <button\r\n                  onClick={() => removeFromCart(item.productId)}\r\n                  className=\"ml-4 px-3 py-1 bg-red-500 text-white rounded-full\"\r\n                >\r\n                  Remove\r\n                </button>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n\r\n      {/* Place Order Button */}\r\n      {cart.length > 0 && (\r\n        <div className=\"mt-6\">\r\n          <button\r\n            onClick={handlePlaceOrder}\r\n            disabled={isProcessing}\r\n            className=\"w-full py-3 px-6 bg-blue-600 text-white text-lg font-semibold rounded-lg hover:bg-blue-700 transition duration-300\"\r\n          >\r\n            {isProcessing ? \"Processing...\" : \"Place Order\"}\r\n          </button>\r\n        </div>\r\n      )}\r\n\r\n      {/* Modal for Order Confirmation */}\r\n      {isModalOpen && (\r\n        <div className=\"fixed inset-0 flex items-center justify-center z-50 bg-gray-500 bg-opacity-50\">\r\n          <div className=\"bg-white p-6 rounded-lg shadow-lg max-w-lg w-full\">\r\n            <h3 className=\"text-xl font-semibold mb-4\">Order Confirmation</h3>\r\n            <table className=\"min-w-full table-auto mb-6\">\r\n              <thead>\r\n                <tr>\r\n                  <th className=\"px-4 py-2 text-left\">Item</th>\r\n                  <th className=\"px-4 py-2 text-left\">Quantity</th>\r\n                  <th className=\"px-4 py-2 text-left\">Price</th>\r\n                  <th className=\"px-4 py-2 text-left\">Total</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {orderDetails.map((order) => (\r\n                  <tr key={order.productId}>\r\n                    <td className=\"px-4 py-2\">{order.name}</td>\r\n                    <td className=\"px-4 py-2\">{order.quantity}</td>\r\n                    <td className=\"px-4 py-2\">${order.price}</td>\r\n                    <td className=\"px-4 py-2\">${order.total}</td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n            <div className=\"flex justify-between\">\r\n              <button\r\n                onClick={handleModalClose}\r\n                className=\"px-4 py-2 bg-gray-300 text-black rounded-lg\"\r\n              >\r\n                Cancel\r\n              </button>\r\n              <button\r\n                onClick={handleOrderConfirm}\r\n                className=\"px-4 py-2 bg-blue-600 text-white rounded-lg\"\r\n              >\r\n                Yes, Place Order\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CartPage;\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 366, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 378, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 379, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}