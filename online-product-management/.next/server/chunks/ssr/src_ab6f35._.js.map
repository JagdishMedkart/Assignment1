{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/HP/Assignment1/online-product-management/src/components/Dashboard/Orders/AdminOrders.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport React, { useState, useEffect, Key } from \"react\";\r\nimport { format, parseISO } from \"date-fns\";\r\nimport { FaChevronDown, FaChevronUp, FaDollarSign, FaTruck } from \"react-icons/fa\"; // React Icons\r\nimport { AiOutlineCaretUp } from \"react-icons/ai\";\r\n\r\ninterface OrderItem {\r\n    orderItemId: Key | null | undefined;\r\n    product: {\r\n        name: string;\r\n        price: number;\r\n        images: string[];\r\n    };\r\n    quantity: number;\r\n    unitPrice: number;\r\n    totalPrice: number;\r\n}\r\n\r\ninterface Order {\r\n    orderId: number;\r\n    user: {\r\n        name: string;\r\n    };\r\n    createdAt: string;\r\n    status: \"PENDING\" | \"SHIPPED\" | \"DELIVERED\";\r\n    paymentStatus: \"PENDING\" | \"COMPLETED\";\r\n    totalAmount: number;\r\n    orderItems: OrderItem[];\r\n    updatedAt: string; // Include updated timestamp\r\n}\r\n\r\ninterface DashboardStats {\r\n    ordersToday: number;\r\n    pendingOrders: number;\r\n    totalSalesToday: number;\r\n    pendingPayments: number;\r\n    mostPurchasedProduct: { name: string; quantity: number } | null;\r\n}\r\n\r\nconst AdminOrdersPage: React.FC = () => {\r\n    const [orders, setOrders] = useState<Order[]>([]);\r\n    const [dashboardStats, setDashboardStats] = useState<DashboardStats | null>(null);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [expandedOrders, setExpandedOrders] = useState<number[]>([]);\r\n    const [totalOrders, setTotalOrders] = useState(0);\r\n    const ordersPerPage = 5;\r\n\r\n    const totalPages = Math.ceil(totalOrders / ordersPerPage);\r\n\r\n    useEffect(() => {\r\n        const fetchOrders = async () => {\r\n            try {\r\n                const [ordersRes, statsRes, totalCountRes] = await Promise.all([\r\n                    fetch(`/api/admin/orders?page=${currentPage}`),\r\n                    fetch(\"/api/admin/orders/stats\"),\r\n                    fetch(\"/api/admin/orders/total-count\"),\r\n                ]);\r\n\r\n                if (ordersRes.ok && statsRes.ok && totalCountRes.ok) {\r\n                    const ordersData = await ordersRes.json();\r\n                    const statsData = await statsRes.json();\r\n                    const totalCountData = await totalCountRes.json();\r\n\r\n                    setOrders(ordersData.orders);\r\n                    setDashboardStats(statsData.stats);\r\n                    setTotalOrders(totalCountData.totalOrders);\r\n                } else {\r\n                    console.error(\"Failed to fetch orders, stats, or total count\");\r\n                }\r\n            } catch (error) {\r\n                console.error(\"Error fetching data:\", error);\r\n            } finally {\r\n                setIsLoading(false);\r\n            }\r\n        };\r\n\r\n        fetchOrders();\r\n    }, [currentPage]);\r\n    const toggleOrder = (orderId: number) => {\r\n        setExpandedOrders((prev) =>\r\n            prev.includes(orderId) ? prev.filter((id) => id !== orderId) : [...prev, orderId]\r\n        );\r\n    };\r\n\r\n    const updateOrder = async (\r\n        orderId: number,\r\n        field: \"status\" | \"paymentStatus\",\r\n        value: string\r\n    ) => {\r\n        try {\r\n            const response = await fetch(`/api/admin/orders/${orderId}`, {\r\n                method: \"PATCH\",\r\n                headers: { \"Content-Type\": \"application/json\" },\r\n                body: JSON.stringify({ [field]: value }),\r\n            });\r\n\r\n            if (response.ok) {\r\n                // Reload the page to reflect updates in stats and data\r\n                window.location.reload();\r\n            } else {\r\n                console.error(\"Failed to update order.\");\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Error updating order:\", error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"max-w-7xl mx-auto p-6\">\r\n            <h2 className=\"text-3xl font-bold text-gray-900 mb-6\">\r\n                Admin Orders Dashboard\r\n            </h2>\r\n\r\n            {dashboardStats && (\r\n                <div className=\"grid grid-cols-1 md:grid-cols-5 gap-4 mb-8\">\r\n                    <div className=\"bg-blue-500 text-white p-6 rounded-lg shadow-md text-center hover:bg-blue-600 transition-all flex flex-col items-center\">\r\n                        <FaTruck size={36} />\r\n                        <h4 className=\"text-lg font-semibold mt-2\">Orders Today</h4>\r\n                        <p className=\"text-3xl\">{dashboardStats.ordersToday}</p>\r\n                    </div>\r\n                    <div className=\"bg-yellow-500 text-white p-6 rounded-lg shadow-md text-center hover:bg-yellow-600 transition-all flex flex-col items-center\">\r\n                        <FaChevronDown size={36} />\r\n                        <h4 className=\"text-lg font-semibold mt-2\">Pending Orders</h4>\r\n                        <p className=\"text-3xl\">{dashboardStats.pendingOrders}</p>\r\n                    </div>\r\n                    <div className=\"bg-green-500 text-white p-6 rounded-lg shadow-md text-center hover:bg-green-600 transition-all flex flex-col items-center\">\r\n                        <FaDollarSign size={36} />\r\n                        <h4 className=\"text-lg font-semibold mt-2\">Total Sales Today</h4>\r\n                        <p className=\"text-3xl\">${dashboardStats.totalSalesToday}</p>\r\n                    </div>\r\n                    <div className=\"bg-red-500 text-white p-6 rounded-lg shadow-md text-center hover:bg-red-600 transition-all flex flex-col items-center\">\r\n                        <FaDollarSign size={36} />\r\n                        <h4 className=\"text-lg font-semibold mt-2\">Pending Payments</h4>\r\n                        <p className=\"text-3xl\">${dashboardStats.pendingPayments}</p>\r\n                    </div>\r\n                    {dashboardStats.mostPurchasedProduct && (\r\n                        <div className=\"bg-purple-500 text-white p-6 rounded-lg shadow-md text-center hover:bg-purple-600 transition-all flex flex-col items-center\">\r\n                            <FaChevronUp size={36} />\r\n                            <h4 className=\"text-lg font-semibold mt-2\">Most Purchased Product</h4>\r\n                            <p>\r\n                                {dashboardStats.mostPurchasedProduct.name} (\r\n                                {dashboardStats.mostPurchasedProduct.quantity})\r\n                            </p>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            )}\r\n\r\n            {isLoading ? (\r\n                <p>Loading orders...</p>\r\n            ) : (\r\n                <div>\r\n                    {orders.map((order) => (\r\n                        <div\r\n                            key={order.orderId}\r\n                            className=\"bg-white rounded-lg shadow-md p-4 mb-4 border cursor-pointer hover:shadow-lg transition\"\r\n                            onClick={() => toggleOrder(order.orderId)}\r\n                        >\r\n                            <div className=\"flex justify-between items-center\">\r\n                                <div className=\"flex items-center gap-2\">\r\n                                    <AiOutlineCaretUp\r\n                                        size={16}\r\n                                        className={`transform transition-transform ${expandedOrders.includes(order.orderId) ? \"rotate-180\" : \"rotate-0\"\r\n                                            }`}\r\n                                    />\r\n                                    <p className=\"font-semibold\">Order #{order.orderId}</p>\r\n                                </div>\r\n                                <p>{format(new Date(order.createdAt), \"PPP\")}</p>\r\n                            </div>\r\n                            <div className=\"flex justify-between items-center mt-2\">\r\n                                <p className=\"w-32 truncate\">{order.user.name}</p>\r\n                                <p className=\"w-20 text-right\">${order.totalAmount.toFixed(2)}</p>\r\n                                <div className=\"flex gap-4\">\r\n                                    <select\r\n                                        value={order.status}\r\n                                        onChange={(e) => updateOrder(order.orderId, \"status\", e.target.value)}\r\n                                        className={`border text-sm rounded px-1 py-1 ${order.status === \"DELIVERED\" ? \"bg-green-500 text-white cursor-default\" : order.status === \"SHIPPED\" ? \"bg-yellow-500 text-white cursor-default\" :\r\n                                            \"bg-red-500 text-white cursor-default\"\r\n                                            }`}\r\n                                        disabled={order.status === \"DELIVERED\"}\r\n                                    >\r\n                                        <option value=\"PENDING\">PENDING</option>\r\n                                        <option value=\"SHIPPED\">SHIPPED</option>\r\n                                        <option value=\"DELIVERED\">DELIVERED</option>\r\n                                    </select>\r\n                                    <select\r\n                                        value={order.paymentStatus}\r\n                                        onChange={(e) => updateOrder(order.orderId, \"paymentStatus\", e.target.value)}\r\n                                        className={`border text-sm rounded px-1 py-1 ${order.paymentStatus === \"COMPLETED\" ? \"bg-green-500 text-white cursor-default\" : \"bg-red-500 text-white cursor-default\"\r\n                                            }`}\r\n                                        disabled={order.paymentStatus === \"COMPLETED\"}\r\n                                    >\r\n                                        <option value=\"PENDING\">PENDING</option>\r\n                                        <option value=\"COMPLETED\">COMPLETED</option>\r\n                                    </select>\r\n                                </div>\r\n                            </div>\r\n                            {expandedOrders.includes(order.orderId) && (\r\n                                <div className=\"mt-4\">\r\n                                    <table className=\"w-full text-center\">\r\n                                        <thead>\r\n                                            <tr className=\"bg-gray-100\">\r\n                                                <th className=\"py-2\">Product</th>\r\n                                                <th className=\"py-2\">Quantity</th>\r\n                                                <th className=\"py-2\">Unit Price</th>\r\n                                                <th className=\"py-2\">Total</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            {order.orderItems.map((item) => (\r\n                                                <tr key={item.orderItemId}>\r\n                                                    <td>{item.product.name}</td>\r\n                                                    <td>{item.quantity}</td>\r\n                                                    <td>${item.unitPrice}</td>\r\n                                                    <td>${item.totalPrice}</td>\r\n                                                </tr>\r\n                                            ))}\r\n                                        </tbody>\r\n                                    </table>\r\n                                    <div className=\"mt-4 text-center text-sm\">\r\n                                        <p>Ordered At: {format(new Date(order.createdAt), \"PPP pp\")}</p>\r\n                                        {order.status === \"DELIVERED\" && order.paymentStatus === \"COMPLETED\" ? (\r\n                                            <p>Completed At: {format(new Date(order.updatedAt), \"PPP pp\")}</p>\r\n                                        ) : (\r\n                                            <p>Completed At: Not yet completed</p>\r\n                                        )}\r\n                                    </div>\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                    ))}\r\n                    {/* Pagination */}\r\n                    <div className=\"flex justify-center items-center mt-4 gap-4\">\r\n                        <button\r\n                            disabled={currentPage === 1}\r\n                            onClick={() => setCurrentPage((prev) => prev - 1)}\r\n                            className=\"px-4 py-2 bg-black text-white rounded disabled:opacity-50 hover:bg-gray-800 transition-all\"\r\n                        >\r\n                            Previous\r\n                        </button>\r\n                        <span className=\"text-lg font-semibold\">{currentPage}</span>\r\n                        <button\r\n                            disabled={currentPage === totalPages}\r\n                            onClick={() => setCurrentPage((prev) => prev + 1)}\r\n                            className=\"px-4 py-2 bg-black text-white rounded disabled:opacity-50 hover:bg-gray-800 transition-all\"\r\n                        >\r\n                            Next\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AdminOrdersPage;\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 637, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}