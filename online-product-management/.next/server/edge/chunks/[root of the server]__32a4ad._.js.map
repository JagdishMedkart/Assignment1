{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/prisma/client.ts"],"sourcesContent":["import { PrismaClient } from \"@prisma/client\";\r\n\r\nconst globalForPrisma = global as unknown as { prisma?: PrismaClient };\r\n\r\nconst prisma = globalForPrisma.prisma || new PrismaClient();\r\n\r\nif (process.env.NODE_ENV !== \"production\") globalForPrisma.prisma = prisma;\r\n\r\nexport default prisma;\r\n"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,kBAAkB;AAExB,MAAM,SAAS,gBAAgB,MAAM,IAAI,IAAI,6IAAA,CAAA,eAAY;AAEzD,wCAA2C,gBAAgB,MAAM,GAAG;uCAErD"}},
    {"offset": {"line": 32, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 38, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/src/middleware.ts"],"sourcesContent":["import { NextResponse } from \"next/server\";\r\nimport type { NextRequest } from \"next/server\";\r\nimport prisma from \"../prisma/client\";\r\n\r\nexport async function middleware(req: NextRequest) {\r\n  const sessionToken = req.cookies.get(\"session-us\")?.value;\r\n\r\n  // Redirect to login if session token is missing\r\n  if (!sessionToken) {\r\n    const loginUrl = req.nextUrl.clone();\r\n    loginUrl.pathname = \"/auth/signin\";\r\n    return NextResponse.redirect(loginUrl);\r\n  }\r\n\r\n  // Fetch the authenticated user\r\n  const user = await prisma.user.findFirst({\r\n    where: {\r\n      sessions: {\r\n        some: { sessionToken },\r\n      },\r\n    },\r\n  });\r\n\r\n  // If user is not a superadmin, redirect\r\n  if (!user || !user.isSuperAdmin) {\r\n    const accessDeniedUrl = req.nextUrl.clone();\r\n    accessDeniedUrl.pathname = \"/access-denied\";\r\n    return NextResponse.redirect(accessDeniedUrl);\r\n  }\r\n\r\n  return NextResponse.next(); // Allow access\r\n}\r\n\r\n// Restrict middleware to specific routes\r\nexport const config = {\r\n  matcher: [\"/dashboard/:path*\", \"/admin/:path*\"],\r\n};\r\n"],"names":[],"mappings":";;;;AAAA;AAEA;AAFA;;;AAIO,eAAe,WAAW,GAAgB;IAC/C,MAAM,eAAe,IAAI,OAAO,CAAC,GAAG,CAAC,eAAe;IAEpD,gDAAgD;IAChD,IAAI,CAAC,cAAc;QACjB,MAAM,WAAW,IAAI,OAAO,CAAC,KAAK;QAClC,SAAS,QAAQ,GAAG;QACpB,OAAO,qLAAA,CAAA,eAAY,CAAC,QAAQ,CAAC;IAC/B;IAEA,+BAA+B;IAC/B,MAAM,OAAO,MAAM,gHAAA,CAAA,UAAM,CAAC,IAAI,CAAC,SAAS,CAAC;QACvC,OAAO;YACL,UAAU;gBACR,MAAM;oBAAE;gBAAa;YACvB;QACF;IACF;IAEA,wCAAwC;IACxC,IAAI,CAAC,QAAQ,CAAC,KAAK,YAAY,EAAE;QAC/B,MAAM,kBAAkB,IAAI,OAAO,CAAC,KAAK;QACzC,gBAAgB,QAAQ,GAAG;QAC3B,OAAO,qLAAA,CAAA,eAAY,CAAC,QAAQ,CAAC;IAC/B;IAEA,OAAO,qLAAA,CAAA,eAAY,CAAC,IAAI,IAAI,eAAe;AAC7C;AAGO,MAAM,SAAS;IACpB,SAAS;QAAC;QAAqB;KAAgB;AACjD"}},
    {"offset": {"line": 79, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}