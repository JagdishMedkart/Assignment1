{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/src/middleware.tsx"],"sourcesContent":["import { NextResponse } from 'next/server';\r\nimport { NextRequest } from 'next/server';\r\n\r\n// This is your middleware handler\r\nexport async function middleware(req: NextRequest) {\r\n  // Ensure that session token is available\r\n  const sessionToken = req.cookies.get('session-us')?.value;\r\n\r\n  if (!sessionToken) {\r\n    return NextResponse.redirect(new URL('/', req.url)); // Redirect to home if not logged in\r\n  }\r\n\r\n  // Make sure to use an absolute URL here\r\n  const user = await fetchUser(sessionToken);  // Fetch user info\r\n\r\n  if (!user?.isSuperAdmin) {\r\n    return NextResponse.redirect(new URL('/profile', req.url));  // Redirect if not super admin\r\n  }\r\n\r\n  return NextResponse.next();  // Allow access if super admin\r\n}\r\n\r\n// Updated fetchUser function\r\nasync function fetchUser(sessionToken: string) {\r\n  const response = await fetch(`${process.env.NEXT_PUBLIC_BASE_URL}/api/auth/check`, {\r\n    method: 'GET',\r\n    headers: {\r\n      'Authorization': `Bearer ${sessionToken}`,\r\n    },\r\n  });\r\n\r\n  const data = await response.json();\r\n  return data.user;  // Assuming `data.user` contains the user object\r\n}\r\n"],"names":[],"mappings":";;;AAAA;AAAA;;AAIO,eAAe,WAAW,GAAgB;IAC/C,yCAAyC;IACzC,MAAM,eAAe,IAAI,OAAO,CAAC,GAAG,CAAC,eAAe;IAEpD,IAAI,CAAC,cAAc;QACjB,OAAO,qLAAA,CAAA,eAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,KAAK,IAAI,GAAG,IAAI,oCAAoC;IAC3F;IAEA,wCAAwC;IACxC,MAAM,OAAO,MAAM,UAAU,eAAgB,kBAAkB;IAE/D,IAAI,CAAC,MAAM,cAAc;QACvB,OAAO,qLAAA,CAAA,eAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,YAAY,IAAI,GAAG,IAAK,8BAA8B;IAC7F;IAEA,OAAO,qLAAA,CAAA,eAAY,CAAC,IAAI,IAAK,8BAA8B;AAC7D;AAEA,6BAA6B;AAC7B,eAAe,UAAU,YAAoB;IAC3C,MAAM,WAAW,MAAM,MAAM,GAAG,QAAQ,GAAG,CAAC,oBAAoB,CAAC,eAAe,CAAC,EAAE;QACjF,QAAQ;QACR,SAAS;YACP,iBAAiB,CAAC,OAAO,EAAE,cAAc;QAC3C;IACF;IAEA,MAAM,OAAO,MAAM,SAAS,IAAI;IAChC,OAAO,KAAK,IAAI,EAAG,gDAAgD;AACrE"}},
    {"offset": {"line": 53, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}