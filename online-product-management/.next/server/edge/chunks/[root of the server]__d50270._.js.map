{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/src/middleware.ts"],"sourcesContent":["import { NextResponse } from \"next/server\";\r\nimport type { NextRequest } from \"next/server\";\r\n\r\nexport async function middleware(req: NextRequest) {\r\n  const url = req.nextUrl.clone();\r\n\r\n  // Fetch the result from the API route\r\n  const response = await fetch(`${url.origin}/api/auth/check-superadmin`, {\r\n    headers: {\r\n      Cookie: req.headers.get(\"cookie\") || \"\",\r\n    },\r\n  });\r\n\r\n  if (response.status !== 200) {\r\n    url.pathname = \"/access-denied\";\r\n    return NextResponse.redirect(url);\r\n  }\r\n\r\n  return NextResponse.next();\r\n}\r\n\r\nexport const config = {\r\n  matcher: [\"/dashboard/:path*\", \"/admin/:path*\"],\r\n};"],"names":[],"mappings":";;;;AAAA;AAAA;;AAGO,eAAe,WAAW,GAAgB;IAC/C,MAAM,MAAM,IAAI,OAAO,CAAC,KAAK;IAE7B,sCAAsC;IACtC,MAAM,WAAW,MAAM,MAAM,GAAG,IAAI,MAAM,CAAC,0BAA0B,CAAC,EAAE;QACtE,SAAS;YACP,QAAQ,IAAI,OAAO,CAAC,GAAG,CAAC,aAAa;QACvC;IACF;IAEA,IAAI,SAAS,MAAM,KAAK,KAAK;QAC3B,IAAI,QAAQ,GAAG;QACf,OAAO,qLAAA,CAAA,eAAY,CAAC,QAAQ,CAAC;IAC/B;IAEA,OAAO,qLAAA,CAAA,eAAY,CAAC,IAAI;AAC1B;AAEO,MAAM,SAAS;IACpB,SAAS;QAAC;QAAqB;KAAgB;AACjD"}},
    {"offset": {"line": 50, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}