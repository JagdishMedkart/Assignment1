{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Medkart/Project1/Assignment1/online-product-management/prisma/client.ts"],"sourcesContent":["import { PrismaClient } from \"@prisma/client\";\r\n\r\nconst globalForPrisma = global as unknown as { prisma?: PrismaClient };\r\n\r\nconst prisma = globalForPrisma.prisma || new PrismaClient();\r\n\r\nif (process.env.NODE_ENV !== \"production\") globalForPrisma.prisma = prisma;\r\n\r\nexport default prisma;\r\n"],"names":[],"mappings":";;;AAAA;AAMI;;AAJJ,MAAM,kBAAkB;AAExB,MAAM,SAAS,gBAAgB,MAAM,IAAI,IAAI,yJAAA,CAAA,eAAY;AAEzD,wCAA2C,gBAAgB,MAAM,GAAG;uCAErD"}},
    {"offset": {"line": 20, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 26, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Medkart/Project1/Assignment1/online-product-management/src/app/cart/page.tsx"],"sourcesContent":["\"use client\";\r\nimport React, { useState } from \"react\";\r\nimport { useCart } from \"../../components/CartContext\";\r\nimport { useRouter } from \"next/navigation\";\r\nimport toast, { Toaster } from \"react-hot-toast\";\r\nimport { cookies } from \"next/headers\";\r\nimport prisma from \"../../../prisma/client\";\r\n\r\nconst CartPage = () => {\r\n    const { cart, removeFromCart, addToCart } = useCart();\r\n    const [isProcessing, setIsProcessing] = useState(false);\r\n    const [quantities, setQuantities] = useState<{ [key: string]: number }>(\r\n        cart.reduce((acc, item) => ({ ...acc, [item.productId]: item.quantity }), {})\r\n    );\r\n    const [isModalOpen, setIsModalOpen] = useState(false);\r\n    const [orderDetails, setOrderDetails] = useState<any[]>([]);\r\n    const router = useRouter();\r\n\r\n    // Handle quantity change input\r\n    const handleQuantityChange = (productId: string, newQuantity: number) => {\r\n        if (newQuantity < 1) {\r\n            removeFromCart(productId); // Remove item if quantity is less than 1\r\n        } else {\r\n            setQuantities((prev) => ({\r\n                ...prev,\r\n                [productId]: newQuantity,\r\n            }));\r\n        }\r\n    };\r\n\r\n    // Update cart based on the final quantities set by the user\r\n    const handlePlaceOrder = async () => {\r\n        // Check if user is logged in\r\n        console.log(\"Place Order clicked!\");\r\n        let sess = (await cookies()).get('session-us')?.value;\r\n        let usr = await prisma.user.findFirst({\r\n            where: {\r\n              sessions: {\r\n                some: {\r\n                  sessionToken: sess\r\n                }\r\n              }\r\n            }\r\n          });\r\n        if (usr == null)\r\n        {\r\n            toast.error(\"Please, Login First\");\r\n        }\r\n\r\n        // Update the cart quantities directly\r\n        setIsProcessing(true);\r\n        const updatedOrderDetails = cart.map((item) => {\r\n            const finalQuantity = quantities[item.productId] || item.quantity;\r\n            return {\r\n                productId: item.productId,\r\n                name: item.name,\r\n                price: item.price,\r\n                quantity: finalQuantity,\r\n                total: finalQuantity * item.price,\r\n            };\r\n        });\r\n        console.log(updatedOrderDetails);\r\n        setOrderDetails(updatedOrderDetails);\r\n        setIsProcessing(false);\r\n\r\n        setIsModalOpen(true); // Open the modal after updating the cart\r\n    };\r\n\r\n    const handleModalClose = () => {\r\n        setIsModalOpen(false);\r\n    };\r\n\r\n    const handleOrderConfirm = () => {\r\n        // Logic to confirm the order (e.g., sending to the backend)\r\n        toast.success(\"Order placed successfully!\");\r\n        setIsModalOpen(false);\r\n    };\r\n\r\n    return (\r\n        <div className=\"max-w-7xl mx-auto p-6\">\r\n            <h2 className=\"text-3xl font-bold text-gray-900 mb-6\">Your Cart</h2>\r\n\r\n            {/* Display message if cart is empty */}\r\n            {cart.length === 0 ? (\r\n                <div className=\"text-center text-lg text-gray-500\">Your cart is empty</div>\r\n            ) : (\r\n                <div className=\"space-y-6\">\r\n                    {cart.map((item) => (\r\n                        <div key={item.productId} className=\"flex items-center justify-between p-4 bg-gray-50 rounded-lg shadow-md\">\r\n                            <div className=\"flex items-center\">\r\n                                <img src={item.image} alt={item.name} className=\"w-16 h-16 object-cover rounded-lg\" />\r\n                                <div className=\"ml-4\">\r\n                                    <h3 className=\"text-lg font-semibold\">{item.name}</h3>\r\n                                    <p className=\"text-sm text-gray-500\">${item.price}</p>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"flex items-center space-x-2\">\r\n                                <input\r\n                                    type=\"number\"\r\n                                    value={quantities[item.productId] || item.quantity}\r\n                                    onChange={(e) => handleQuantityChange(item.productId, parseInt(e.target.value, 10))}\r\n                                    min=\"1\"\r\n                                    className=\"w-16 p-2 border border-gray-300 rounded-lg text-center\"\r\n                                />\r\n                                <button\r\n                                    onClick={() => removeFromCart(item.productId)}\r\n                                    className=\"ml-4 px-3 py-1 bg-red-500 text-white rounded-full\"\r\n                                >\r\n                                    Remove\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            )}\r\n\r\n            {/* Place Order Button */}\r\n            {cart.length > 0 && (\r\n                <div className=\"mt-6\">\r\n                    <button\r\n                        onClick={handlePlaceOrder}\r\n                        disabled={isProcessing}\r\n                        className=\"w-full py-3 px-6 bg-blue-600 text-white text-lg font-semibold rounded-lg hover:bg-blue-700 transition duration-300\"\r\n                    >\r\n                        {isProcessing ? \"Processing...\" : \"Place Order\"}\r\n                    </button>\r\n                </div>\r\n            )}\r\n\r\n            {/* Modal for Order Confirmation */}\r\n            {isModalOpen && (\r\n                <div className=\"fixed inset-0 flex items-center justify-center z-50 bg-gray-500 bg-opacity-50\">\r\n                    <div className=\"bg-white p-6 rounded-lg shadow-lg max-w-lg w-full\">\r\n                        <h3 className=\"text-xl font-semibold mb-4\">Order Confirmation</h3>\r\n                        <table className=\"min-w-full table-auto mb-6\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th className=\"px-4 py-2 text-left\">Item</th>\r\n                                    <th className=\"px-4 py-2 text-left\">Quantity</th>\r\n                                    <th className=\"px-4 py-2 text-left\">Price</th>\r\n                                    <th className=\"px-4 py-2 text-left\">Total</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {orderDetails.map((order) => (\r\n                                    <tr key={order.productId}>\r\n                                        <td className=\"px-4 py-2\">{order.name}</td>\r\n                                        <td className=\"px-4 py-2\">{order.quantity}</td>\r\n                                        <td className=\"px-4 py-2\">${order.price}</td>\r\n                                        <td className=\"px-4 py-2\">${order.total}</td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </table>\r\n                        <div className=\"flex justify-between\">\r\n                            <button\r\n                                onClick={handleModalClose}\r\n                                className=\"px-4 py-2 bg-gray-300 text-black rounded-lg\"\r\n                            >\r\n                                Cancel\r\n                            </button>\r\n                            <button\r\n                                onClick={handleOrderConfirm}\r\n                                className=\"px-4 py-2 bg-blue-600 text-white rounded-lg\"\r\n                            >\r\n                                Yes, Place Order\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )}\r\n            <Toaster\r\n                position=\"top-center\"\r\n                reverseOrder={false}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CartPage;\r\n"],"names":[],"mappings":";;;;AACA;AACA;AACA;AACA;AACA;AACA;;;AANA;;;;;;;AAQA,MAAM,WAAW;;IACb,MAAM,EAAE,IAAI,EAAE,cAAc,EAAE,SAAS,EAAE,GAAG,CAAA,GAAA,oIAAA,CAAA,UAAO,AAAD;IAClD,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACjD,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EACvC,KAAK,MAAM;6BAAC,CAAC,KAAK,OAAS,CAAC;gBAAE,GAAG,GAAG;gBAAE,CAAC,KAAK,SAAS,CAAC,EAAE,KAAK,QAAQ;YAAC,CAAC;4BAAG,CAAC;IAE/E,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC/C,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAS,EAAE;IAC1D,MAAM,SAAS,CAAA,GAAA,qIAAA,CAAA,YAAS,AAAD;IAEvB,+BAA+B;IAC/B,MAAM,uBAAuB,CAAC,WAAmB;QAC7C,IAAI,cAAc,GAAG;YACjB,eAAe,YAAY,yCAAyC;QACxE,OAAO;YACH,cAAc,CAAC,OAAS,CAAC;oBACrB,GAAG,IAAI;oBACP,CAAC,UAAU,EAAE;gBACjB,CAAC;QACL;IACJ;IAEA,4DAA4D;IAC5D,MAAM,mBAAmB;QACrB,6BAA6B;QAC7B,QAAQ,GAAG,CAAC;QACZ,IAAI,OAAO,CAAC,MAAM,CAAA,GAAA,kIAAA,CAAA,UAAO,AAAD,GAAG,EAAE,GAAG,CAAC,eAAe;QAChD,IAAI,MAAM,MAAM,mHAAA,CAAA,UAAM,CAAC,IAAI,CAAC,SAAS,CAAC;YAClC,OAAO;gBACL,UAAU;oBACR,MAAM;wBACJ,cAAc;oBAChB;gBACF;YACF;QACF;QACF,IAAI,OAAO,MACX;YACI,0JAAA,CAAA,UAAK,CAAC,KAAK,CAAC;QAChB;QAEA,sCAAsC;QACtC,gBAAgB;QAChB,MAAM,sBAAsB,KAAK,GAAG,CAAC,CAAC;YAClC,MAAM,gBAAgB,UAAU,CAAC,KAAK,SAAS,CAAC,IAAI,KAAK,QAAQ;YACjE,OAAO;gBACH,WAAW,KAAK,SAAS;gBACzB,MAAM,KAAK,IAAI;gBACf,OAAO,KAAK,KAAK;gBACjB,UAAU;gBACV,OAAO,gBAAgB,KAAK,KAAK;YACrC;QACJ;QACA,QAAQ,GAAG,CAAC;QACZ,gBAAgB;QAChB,gBAAgB;QAEhB,eAAe,OAAO,yCAAyC;IACnE;IAEA,MAAM,mBAAmB;QACrB,eAAe;IACnB;IAEA,MAAM,qBAAqB;QACvB,4DAA4D;QAC5D,0JAAA,CAAA,UAAK,CAAC,OAAO,CAAC;QACd,eAAe;IACnB;IAEA,qBACI,6LAAC;QAAI,WAAU;;0BACX,6LAAC;gBAAG,WAAU;0BAAwC;;;;;;YAGrD,KAAK,MAAM,KAAK,kBACb,6LAAC;gBAAI,WAAU;0BAAoC;;;;;qCAEnD,6LAAC;gBAAI,WAAU;0BACV,KAAK,GAAG,CAAC,CAAC,qBACP,6LAAC;wBAAyB,WAAU;;0CAChC,6LAAC;gCAAI,WAAU;;kDACX,6LAAC;wCAAI,KAAK,KAAK,KAAK;wCAAE,KAAK,KAAK,IAAI;wCAAE,WAAU;;;;;;kDAChD,6LAAC;wCAAI,WAAU;;0DACX,6LAAC;gDAAG,WAAU;0DAAyB,KAAK,IAAI;;;;;;0DAChD,6LAAC;gDAAE,WAAU;;oDAAwB;oDAAE,KAAK,KAAK;;;;;;;;;;;;;;;;;;;0CAGzD,6LAAC;gCAAI,WAAU;;kDACX,6LAAC;wCACG,MAAK;wCACL,OAAO,UAAU,CAAC,KAAK,SAAS,CAAC,IAAI,KAAK,QAAQ;wCAClD,UAAU,CAAC,IAAM,qBAAqB,KAAK,SAAS,EAAE,SAAS,EAAE,MAAM,CAAC,KAAK,EAAE;wCAC/E,KAAI;wCACJ,WAAU;;;;;;kDAEd,6LAAC;wCACG,SAAS,IAAM,eAAe,KAAK,SAAS;wCAC5C,WAAU;kDACb;;;;;;;;;;;;;uBAnBC,KAAK,SAAS;;;;;;;;;;YA6BnC,KAAK,MAAM,GAAG,mBACX,6LAAC;gBAAI,WAAU;0BACX,cAAA,6LAAC;oBACG,SAAS;oBACT,UAAU;oBACV,WAAU;8BAET,eAAe,kBAAkB;;;;;;;;;;;YAM7C,6BACG,6LAAC;gBAAI,WAAU;0BACX,cAAA,6LAAC;oBAAI,WAAU;;sCACX,6LAAC;4BAAG,WAAU;sCAA6B;;;;;;sCAC3C,6LAAC;4BAAM,WAAU;;8CACb,6LAAC;8CACG,cAAA,6LAAC;;0DACG,6LAAC;gDAAG,WAAU;0DAAsB;;;;;;0DACpC,6LAAC;gDAAG,WAAU;0DAAsB;;;;;;0DACpC,6LAAC;gDAAG,WAAU;0DAAsB;;;;;;0DACpC,6LAAC;gDAAG,WAAU;0DAAsB;;;;;;;;;;;;;;;;;8CAG5C,6LAAC;8CACI,aAAa,GAAG,CAAC,CAAC,sBACf,6LAAC;;8DACG,6LAAC;oDAAG,WAAU;8DAAa,MAAM,IAAI;;;;;;8DACrC,6LAAC;oDAAG,WAAU;8DAAa,MAAM,QAAQ;;;;;;8DACzC,6LAAC;oDAAG,WAAU;;wDAAY;wDAAE,MAAM,KAAK;;;;;;;8DACvC,6LAAC;oDAAG,WAAU;;wDAAY;wDAAE,MAAM,KAAK;;;;;;;;2CAJlC,MAAM,SAAS;;;;;;;;;;;;;;;;sCASpC,6LAAC;4BAAI,WAAU;;8CACX,6LAAC;oCACG,SAAS;oCACT,WAAU;8CACb;;;;;;8CAGD,6LAAC;oCACG,SAAS;oCACT,WAAU;8CACb;;;;;;;;;;;;;;;;;;;;;;;0BAOjB,6LAAC,0JAAA,CAAA,UAAO;gBACJ,UAAS;gBACT,cAAc;;;;;;;;;;;;AAI9B;GAzKM;;QAC0C,oIAAA,CAAA,UAAO;QAOpC,qIAAA,CAAA,YAAS;;;KARtB;uCA2KS"}},
    {"offset": {"line": 423, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}