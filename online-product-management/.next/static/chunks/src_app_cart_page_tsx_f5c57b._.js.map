{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/HP/Assignment1/online-product-management/src/app/cart/page.tsx"],"sourcesContent":["// \"use client\";\r\n\r\n// import React, { useState } from \"react\";\r\n// import { useCart } from \"../../components/CartContext\";\r\n// import { useRouter } from \"next/navigation\";\r\n// import toast, { Toaster } from \"react-hot-toast\";\r\n// import { User } from \"@prisma/client\";\r\n\r\n// const CartPage = () => {\r\n//   const { cart, removeFromCart, addToCart, clearCart } = useCart();\r\n//   const [isProcessing, setIsProcessing] = useState(false);\r\n//   const [quantities, setQuantities] = useState<{ [key: string]: number }>(\r\n//     cart.reduce((acc, item) => ({ ...acc, [item.productId]: item.quantity }), {})\r\n//   );\r\n// const [isModalOpen, setIsModalOpen] = useState(false);\r\n// const [orderDetails, setOrderDetails] = useState<any[]>([]);\r\n// const [currrentUser, setCurrentUser] = useState<User>();\r\n// const router = useRouter();\r\n\r\n//   const handleQuantityChange = (productId: string, newQuantity: number) => {\r\n//     if (newQuantity < 1) {\r\n//       removeFromCart(productId);\r\n//     } else {\r\n//       setQuantities((prev) => ({\r\n//         ...prev,\r\n//         [productId]: newQuantity,\r\n//       }));\r\n//     }\r\n//   };\r\n\r\n//   const handlePlaceOrder = async () => {\r\n//     setIsProcessing(true);\r\n\r\n//     try {\r\n//       const response = await fetch(\"/api/auth/check\", { method: \"GET\" });\r\n\r\n//       // console.log(response);\r\n\r\n//       if (!response.ok) {\r\n//         toast.error(\"Please log in to place an order.\");\r\n//         router.push(`/auth/signin`);\r\n//         return;\r\n//       }\r\n\r\n//       const { isLoggedIn, user } = await response.json();\r\n//       // console.log(user);\r\n//       setCurrentUser(user);\r\n//       if (!isLoggedIn) {\r\n//         toast.error(\"Please log in to place an order.\");\r\n//         router.push(`/auth/signin`);\r\n//         return;\r\n//       }\r\n\r\n//       // console.log(cart);\r\n\r\n//       // Proceed with order placement\r\n//       const updatedOrderDetails = cart.map((item) => ({\r\n//         productId: item.productId,\r\n//         name: item.name,\r\n//         price: item.price,\r\n//         quantity: quantities[item.productId] || item.quantity,\r\n//         total: (quantities[item.productId] || item.quantity) * item.price,\r\n//       }));\r\n\r\n//       // console.log(\"Order Details:\", updatedOrderDetails);\r\n//       setOrderDetails(updatedOrderDetails);\r\n//       setIsModalOpen(true);\r\n//     } catch (error) {\r\n//       console.error(\"Error checking login status:\", error);\r\n//       toast.error(\"An error occurred. Please try again.\");\r\n//     } finally {\r\n//       setIsProcessing(false);\r\n//     }\r\n//   };\r\n\r\n// const handleModalClose = () => setIsModalOpen(false);\r\n\r\n// const handleOrderConfirm = async () => {\r\n//   try {\r\n//     // console.log(currrentUser);\r\n\r\n//     // Create order data, use the updated quantities from the state\r\n//     const orderData = {\r\n//       userId: currrentUser?.userId, // Replace with actual user ID\r\n//       orderItems: cart.map((item) => ({\r\n//         productWsCode: item.productId,\r\n//         quantity: quantities[item.productId] || item.quantity, // Use updated quantity from state\r\n//         unitPrice: item.price,\r\n//         totalPrice: (quantities[item.productId] || item.quantity) * item.price, // Total price based on updated quantity\r\n//       })),\r\n//       totalAmount: cart.reduce((sum, item) => sum + (quantities[item.productId] || item.quantity) * item.price, 0), // Calculate total based on updated quantity\r\n//       address: \"123 Street, City, Country\", // Replace with user's actual address\r\n//       notes: \"Please deliver between 9 AM - 5 PM\", // Optional\r\n//     };\r\n\r\n//     // console.log(orderData);\r\n\r\n//     const response = await fetch(\"/api/order/place\", {\r\n//       method: \"POST\",\r\n//       headers: { \"Content-Type\": \"application/json\" },\r\n//       body: JSON.stringify(orderData),\r\n//     });\r\n\r\n//     const data = await response.json();\r\n//     if (response.ok) {\r\n//       toast.success(\"Order placed successfully!\");\r\n//       clearCart(); // Clear the cart\r\n//       setIsModalOpen(false);\r\n//       setTimeout(() => {\r\n//         router.push(\"/orders\");\r\n//       }, 2000);\r\n//     } else {\r\n//       toast.error(data.message || \"Failed to place order.\");\r\n//     }\r\n//   } catch (error) {\r\n//     console.error(\"Error placing order:\", error);\r\n//     toast.error(\"An error occurred. Please try again.\");\r\n//   }\r\n// };\r\n\r\n\r\n//   return (\r\n//     <div className=\"max-w-7xl mx-auto p-6\">\r\n//       <h2 className=\"text-3xl font-bold text-gray-900 mb-6\">Your Cart</h2>\r\n//       {cart.length === 0 ? (\r\n//         <div className=\"text-center mt-12\">\r\n//           <div className=\"text-center text-lg text-gray-500\">Your cart is empty</div>\r\n//           <button\r\n//             onClick={() => router.push(\"/viewproducts\")}\r\n//             className=\"mt-6 text-lg px-6 py-2 bg-blue-500 text-white rounded-lg hover:bg-blue-600 transition\"\r\n//           >\r\n//             Let's fill it...\r\n//           </button>\r\n//         </div>\r\n//       ) : (\r\n//         <div className=\"space-y-6\">\r\n//           {cart.map((item) => (\r\n//             <div\r\n//               key={item.productId}\r\n//               className=\"flex items-center justify-between p-4 bg-gray-50 rounded-lg shadow-md\"\r\n//             >\r\n//               <div className=\"flex items-center\">\r\n//                 <img\r\n//                   src={item.image}\r\n//                   alt={item.name}\r\n//                   className=\"w-16 h-16 object-cover rounded-lg\"\r\n//                 />\r\n//                 <div className=\"ml-4\">\r\n//                   <h3 className=\"text-lg font-semibold\">{item.name}</h3>\r\n//                   <p className=\"text-sm text-gray-500\">${item.price}</p>\r\n//                 </div>\r\n//               </div>\r\n//               <div className=\"flex items-center space-x-2\">\r\n//                 <input\r\n//                   type=\"number\"\r\n//                   value={quantities[item.productId] || item.quantity}\r\n//                   onChange={(e) =>\r\n//                     handleQuantityChange(item.productId, parseInt(e.target.value, 10))\r\n//                   }\r\n//                   min=\"1\"\r\n//                   className=\"w-16 p-2 border border-gray-300 rounded-lg text-center\"\r\n//                 />\r\n//                 <button\r\n//                   onClick={() => removeFromCart(item.productId)}\r\n//                   className=\"ml-4 px-3 py-1 bg-red-500 text-white rounded-full\"\r\n//                 >\r\n//                   Remove\r\n//                 </button>\r\n//               </div>\r\n//             </div>\r\n//           ))}\r\n//         </div>\r\n//       )}\r\n\r\n//       {cart.length > 0 && (\r\n//         <div className=\"mt-6\">\r\n//           <button\r\n//             onClick={handlePlaceOrder}\r\n//             disabled={isProcessing}\r\n//             className=\"w-full py-3 px-6 bg-blue-600 text-white text-lg font-semibold rounded-lg hover:bg-blue-700 transition duration-300\"\r\n//           >\r\n//             {isProcessing ? \"Processing...\" : \"Place Order\"}\r\n//           </button>\r\n//         </div>\r\n//       )}\r\n\r\n// {\r\n//   isModalOpen && (\r\n//     <div className=\"fixed inset-0 flex items-center justify-center z-50 bg-gray-500 bg-opacity-50\">\r\n//       <div className=\"bg-white p-6 rounded-lg shadow-lg max-w-lg w-full\">\r\n//         <h3 className=\"text-xl font-semibold mb-4\">Order Confirmation</h3>\r\n//         <table className=\"min-w-full table-auto mb-6\">\r\n//           <thead>\r\n//             <tr>\r\n//               <th className=\"px-4 py-2 text-left\">Item</th>\r\n//               <th className=\"px-4 py-2 text-left\">Quantity</th>\r\n//               <th className=\"px-4 py-2 text-left\">Price</th>\r\n//               <th className=\"px-4 py-2 text-left\">Total</th>\r\n//             </tr>\r\n//           </thead>\r\n//           <tbody>\r\n//             {orderDetails.map((order) => (\r\n//               <tr key={order.productId}>\r\n//                 <td className=\"px-4 py-2\">{order.name}</td>\r\n//                 <td className=\"px-4 py-2\">{order.quantity}</td>\r\n//                 <td className=\"px-4 py-2\">${order.price}</td>\r\n//                 <td className=\"px-4 py-2\">${order.total}</td>\r\n//               </tr>\r\n//             ))}\r\n//           </tbody>\r\n//         </table>\r\n//         <div className=\"flex justify-between\">\r\n//           <button\r\n//             onClick={handleModalClose}\r\n//             className=\"px-4 py-2 bg-gray-300 text-black rounded-lg\"\r\n//           >\r\n//             Cancel\r\n//           </button>\r\n//           <button\r\n//             onClick={handleOrderConfirm}\r\n//             className=\"px-4 py-2 bg-blue-600 text-white rounded-lg\"\r\n//           >\r\n//             Yes, Place Order\r\n//           </button>\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   )\r\n// }\r\n\r\n//       <Toaster position=\"top-center\" reverseOrder={false} />\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default CartPage;\r\n\r\n\r\n\r\n\r\n\r\n\"use client\";\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useRouter } from \"next/navigation\";\r\nimport toast, { Toaster } from \"react-hot-toast\";\r\nimport { User } from \"next-auth\";\r\nimport { useCart } from \"@/components/CartContext\";\r\nimport { number } from \"zod\";\r\n\r\nconst CartPage = () => {\r\n  const { removeFromCart, addToCart, clearCart } = useCart();\r\n  const [cart, setCart] = useState<any[]>([]); // State to hold the user's cart items\r\n  const [isProcessing, setIsProcessing] = useState(false);\r\n  const [quantities, setQuantities] = useState<{ [key: string]: number }>({});\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [orderDetails, setOrderDetails] = useState<any[]>([]);\r\n  const [currrentUser, setCurrentUser] = useState<User>();\r\n  const router = useRouter();\r\n\r\n\r\n  const handleModalClose = () => setIsModalOpen(false);\r\n  // Fetch the cart data for the logged-in user\r\n  const fetchCart = async () => {\r\n    try {\r\n      const response = await fetch(\"/api/cart/index\");\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        console.log(data);\r\n        setCart(data.cartItems);\r\n        // Initialize quantities state based on cart items\r\n        const initialQuantities = data.cartItems.reduce((acc: any, item: any) => {\r\n          acc[item.productId] = item.quantity;\r\n          return acc;\r\n        }, {});\r\n        setQuantities(initialQuantities);\r\n      } else {\r\n        toast.error(\"Failed to fetch cart items\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching cart:\", error);\r\n      toast.error(\"An error occurred while fetching your cart.\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchCart();\r\n  }, []);\r\n\r\n  const handleQuantityChange = async (productId: string, newQuantity: number) => {\r\n    if (newQuantity < 1) {\r\n      // Remove item if quantity is less than 1\r\n      await handleRemoveFromCart(number(productId));\r\n    } else {\r\n      // Optimistically update the quantity in the UI\r\n      setQuantities((prevQuantities) => ({\r\n        ...prevQuantities,\r\n        [productId]: newQuantity,\r\n      }));\r\n\r\n      // Update the cart on the server\r\n      const updatedItem = cart.find((item) => item.productId === productId);\r\n      if (updatedItem) {\r\n        try {\r\n          const response = await fetch(\"/api/cart/add\", {\r\n            method: \"POST\",\r\n            body: JSON.stringify({\r\n              productId: parseInt(updatedItem.productId),\r\n              quantity: newQuantity,\r\n            }),\r\n          });\r\n          if (!response.ok) {\r\n            throw new Error(\"Failed to update cart\");\r\n          }\r\n        } catch (error) {\r\n          console.error(\"Error updating cart item:\", error);\r\n          toast.error(\"An error occurred while updating your cart.\");\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleRemoveFromCart = async (id: number) => {\r\n    const res = await fetch(`/api/auth/check`, { method: \"GET\" });\r\n    const usr = await res.json();\r\n    console.log(usr);\r\n    try {\r\n      const response = await fetch(`/api/cart/remove/${id}/${usr.user.userId}`, {\r\n        method: \"DELETE\",\r\n        body: JSON.stringify({ id: id, userId: usr.user.userId }),\r\n      });\r\n      if (response.ok) {\r\n        toast.success(\"Item removed from cart\");\r\n        fetchCart(); // Re-fetch the cart to get updated items\r\n      } else {\r\n        toast.error(\"Failed to remove item from cart\");\r\n      }\r\n    } catch (error) {\r\n      if (error instanceof Error) {\r\n        console.log(error.stack)\r\n      }\r\n      console.error(\"Error removing item from cart:\", error);\r\n      toast.error(\"An error occurred while removing the item from your cart.\");\r\n    }\r\n  };\r\n\r\n  const handlePlaceOrder = async () => {\r\n    setIsProcessing(true);\r\n    try {\r\n      const response = await fetch(\"/api/auth/check\", { method: \"GET\" });\r\n      if (!response.ok) {\r\n        toast.error(\"Please log in to place an order.\");\r\n        router.push(\"/auth/signin\");\r\n        return;\r\n      }\r\n\r\n      const { isLoggedIn } = await response.json();\r\n      if (!isLoggedIn) {\r\n        toast.error(\"Please log in to place an order.\");\r\n        router.push(\"/auth/signin\");\r\n        return;\r\n      }\r\n\r\n      const order = await (await fetch(`/api/cart/index`, { method: \"GET\" })).json();\r\n      console.log(order);\r\n      setIsModalOpen(true);\r\n      setOrderDetails(order.cartItems);\r\n      // Redirect to order summary page\r\n      // router.push(\"/orders\");\r\n    } catch (error) {\r\n      console.error(\"Error during order placement:\", error);\r\n      toast.error(\"An error occurred. Please try again.\");\r\n    } finally {\r\n      setIsProcessing(false);\r\n    }\r\n  };\r\n\r\n  const handleOrderConfirm = async () => {\r\n    try {\r\n      // console.log(currrentUser);\r\n\r\n      // Create order data, use the updated quantities from the state\r\n      const res = await fetch(`/api/auth/check`, { method: \"GET\" });\r\n      const usr = await res.json();\r\n      console.log(orderDetails)\r\n      const orderData = {\r\n        userId: usr.user.userId, // Replace with actual user ID\r\n        orderItems: orderDetails.map((item) => ({\r\n          productWsCode: item.productId,\r\n          quantity: item.quantity, // Use updated quantity from state\r\n          unitPrice: item.product.mrp,\r\n          totalPrice: (item.quantity) * item.product.mrp, // Total price based on updated quantity\r\n        })),\r\n        totalAmount: cart.reduce((sum, item) => sum + (item.quantity) * item.product.mrp, 0), // Calculate total based on updated quantity\r\n        address: \"123 Street, City, Country\", // Replace with user's actual address\r\n        notes: \"Please deliver between 9 AM - 5 PM\", // Optional\r\n      };\r\n\r\n      console.log(orderData);\r\n\r\n      const response = await fetch(\"/api/order/place\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(orderData),\r\n      });\r\n\r\n      const data = await response.json();\r\n      if (response.ok) {\r\n        toast.success(\"Order placed successfully!\");\r\n        clearCart(); // Clear the cart\r\n        setIsModalOpen(false);\r\n        setTimeout(() => {\r\n          router.push(\"/orders\");\r\n        }, 2000);\r\n      } else {\r\n        toast.error(data.message || \"Failed to place order.\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error placing order:\", error);\r\n      toast.error(\"An error occurred. Please try again.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"max-w-7xl mx-auto p-6\">\r\n      <h2 className=\"text-3xl font-bold text-gray-900 mb-6\">Your Cart</h2>\r\n      {cart.length === 0 ? (\r\n        <div className=\"text-center mt-12\">\r\n          <p className=\"text-lg text-gray-500\">Your cart is empty</p>\r\n          <button\r\n            onClick={() => router.push(\"/viewproducts\")}\r\n            className=\"mt-6 text-lg px-6 py-2 bg-blue-500 text-white rounded-lg hover:bg-blue-600 transition\"\r\n          >\r\n            Let's fill it...\r\n          </button>\r\n        </div>\r\n      ) : (\r\n        <div className=\"space-y-6\">\r\n          {cart.map((item) => (\r\n            <div\r\n              key={item.productId}\r\n              className=\"flex items-center justify-between p-4 bg-gray-50 rounded-lg shadow-md\"\r\n            >\r\n              <div className=\"flex items-center\">\r\n                <img\r\n                  src={item.product.images[0]}\r\n                  alt={item.name}\r\n                  className=\"w-16 h-16 object-cover rounded-lg\"\r\n                />\r\n                <div className=\"ml-4\">\r\n                  <h3 className=\"text-lg font-semibold\">{item.product.name}</h3>\r\n                  <p className=\"text-sm text-gray-500\">${item.product.mrp}</p>\r\n                </div>\r\n              </div>\r\n              <div className=\"flex items-center space-x-2\">\r\n                <button\r\n                  onClick={() =>\r\n                    handleQuantityChange(item.productId, quantities[item.productId] - 1)\r\n                  }\r\n                  className=\"px-3 py-1 bg-gray-300 text-black rounded-lg\"\r\n                  disabled={quantities[item.productId] <= 1}\r\n                >\r\n                  -\r\n                </button>\r\n                <input\r\n                  type=\"number\"\r\n                  value={quantities[item.productId] || item.quantity}\r\n                  onChange={(e) =>\r\n                    handleQuantityChange(\r\n                      item.productId,\r\n                      parseInt(e.target.value, 10)\r\n                    )\r\n                  }\r\n                  min=\"1\"\r\n                  className=\"w-16 p-2 border border-gray-300 rounded-lg text-center\"\r\n                />\r\n                <button\r\n                  onClick={() =>\r\n                    handleQuantityChange(item.productId, quantities[item.productId] + 1)\r\n                  }\r\n                  className=\"px-3 py-1 bg-gray-300 text-black rounded-lg\"\r\n                >\r\n                  +\r\n                </button>\r\n                <button\r\n                  onClick={() => handleRemoveFromCart(item.productId)}\r\n                  className=\"ml-4 px-3 py-1 bg-red-500 text-white rounded-full\"\r\n                >\r\n                  Remove\r\n                </button>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n\r\n      {cart.length > 0 && (\r\n        <div className=\"mt-6\">\r\n          <button\r\n            onClick={handlePlaceOrder}\r\n            disabled={isProcessing}\r\n            className=\"w-full py-3 px-6 bg-blue-600 text-white text-lg font-semibold rounded-lg hover:bg-blue-700 transition duration-300\"\r\n          >\r\n            {isProcessing ? \"Processing...\" : \"Place Order\"}\r\n          </button>\r\n        </div>\r\n      )}\r\n\r\n      {isModalOpen && (\r\n        <div className=\"fixed inset-0 flex items-center justify-center z-50 bg-gray-500 bg-opacity-50\">\r\n          <div className=\"bg-white p-6 rounded-lg shadow-lg max-w-lg w-full\">\r\n            <h3 className=\"text-xl font-semibold mb-4\">Order Confirmation</h3>\r\n            <table className=\"min-w-full table-auto mb-6\">\r\n              <thead>\r\n                <tr>\r\n                  <th className=\"px-4 py-2 text-left\">Item</th>\r\n                  <th className=\"px-4 py-2 text-left\">Quantity</th>\r\n                  <th className=\"px-4 py-2 text-left\">Price</th>\r\n                  <th className=\"px-4 py-2 text-left\">Total</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {orderDetails.map((order) => (\r\n                  <tr key={order.productId}>\r\n                    <td className=\"px-4 py-2\">{order?.product?.name}</td>\r\n                    <td className=\"px-4 py-2\">{order.quantity}</td>\r\n                    <td className=\"px-4 py-2\">${order.product.mrp}</td>\r\n                    <td className=\"px-4 py-2\">${order.product.mrp * order.quantity}</td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n            <div className=\"flex justify-between\">\r\n              <button\r\n                onClick={handleModalClose}\r\n                className=\"px-4 py-2 bg-gray-300 text-black rounded-lg\"\r\n              >\r\n                Cancel\r\n              </button>\r\n              <button\r\n                onClick={handleOrderConfirm}\r\n                className=\"px-4 py-2 bg-blue-600 text-white rounded-lg\"\r\n              >\r\n                Yes, Place Order\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      <Toaster position=\"top-center\" reverseOrder={false} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CartPage;\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 760, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}