{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Medkart/Project1/Assignment1/online-product-management/src/components/Layout/Spinner.tsx"],"sourcesContent":["import React from 'react'\r\n\r\nfunction Spinner() {\r\n  return (\r\n    <>Loading...\r\n      <div\r\n        className=\"inline-block h-4 w-4 ml-3 animate-spin rounded-full border-2 border-solid border-current border-e-transparent align-[-0.125em] text-surface motion-reduce:animate-[spin_1.5s_linear_infinite] dark:text-white\"\r\n        role=\"status\">\r\n        <span\r\n          className=\"!absolute !-m-px !h-px !w-px !overflow-hidden !whitespace-nowrap !border-0 !p-0 ![clip:rect(0,0,0,0)]\"\r\n        ></span>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Spinner"],"names":[],"mappings":";;;;;AAEA,SAAS;IACP,qBACE;;YAAE;0BACA,6LAAC;gBACC,WAAU;gBACV,MAAK;0BACL,cAAA,6LAAC;oBACC,WAAU;;;;;;;;;;;;;AAKpB;KAZS;uCAcM"}},
    {"offset": {"line": 41, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 47, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Medkart/Project1/Assignment1/online-product-management/src/components/Auth/Signup2.tsx"],"sourcesContent":["\"use client\"\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useRouter } from 'next/navigation'\r\nimport Spinner from '../Layout/Spinner';\r\nimport toast, { Toaster } from 'react-hot-toast';\r\nimport Image from 'next/image';\r\nimport zxcvbn from 'zxcvbn';\r\nimport { date } from 'zod';\r\n\r\nconst SignUpPage: React.FC = () => {\r\n  const router = useRouter();\r\n  const [fullName, setFullName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [isSubmitting, setSubmitting] = useState<boolean>(false);\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [passwordStrength, setPasswordStrength] = useState<number>(0);\r\n  const [isPasswordFocused, setPasswordFocused] = useState<boolean>(false);\r\n  const [errors, setErrors] = useState<{ fullName?: string; email?: string; password?: string; confirmPassword?: string; otp?: string }>({});\r\n  const [otp, setOtp] = useState(new Array(6).fill(''));\r\n  const [otpVisible, setOtpVisible] = useState(false);\r\n  const [otpButton, setOtpButton] = useState(false);\r\n  const [timer, setTimer] = useState(0);\r\n  const [otpError, setOtpError] = useState(false);\r\n  const [emailVerified, setEmailVerified] = useState(false);\r\n  const [correctOtp,setCorrectOtp] = useState(Math.floor(100000 + Math.random() * 900000).toString());\r\n\r\n  const handleEmailChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const value = e.target.value;\r\n    setEmailVerified(false);\r\n    setEmail(value);\r\n  \r\n    let emailError = '';\r\n    if (!value) {\r\n      emailError = 'Email is required';\r\n    } else if (!/\\S+@\\S+\\.\\S+/.test(value)) {\r\n      emailError = 'Email is invalid';\r\n    } else {\r\n      emailError = 'Verify Email first!'; // Clear email error if email is valid\r\n    }\r\n  \r\n    setErrors((prevErrors) => ({ ...prevErrors, email: emailError }));\r\n  };\r\n  \r\n  const handleOtpChange = (element:any, index:any) => {\r\n    const value = element.value;\r\n    if (/^[0-9]$/.test(value)) {\r\n      let newOtp = [...otp];\r\n      newOtp[index] = value;\r\n      setOtp(newOtp);\r\n\r\n      setOtpError(false); // Remove OTP error message when typing starts\r\n\r\n      // Focus the next input\r\n      if (element.nextSibling) {\r\n        element.nextSibling.focus();\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleOtpVisibility = () => {\r\n    //\r\n    setOtpVisible(true);\r\n    handleResendOtp();\r\n    setErrors((prevErrors) => ({ ...prevErrors, email: undefined })); // Clear the email error when OTP verification starts\r\n  };\r\n  const handleResendOtp = async() => {\r\n    //setCorrectOtp(Math.floor(100000 + Math.random() * 900000).toString());\r\n    let data={ to: email, subject:\"OTP SENT\", text:correctOtp };\r\n    const response = await fetch('/api/auth/email', {\r\n      method: 'POST',\r\n      body: JSON.stringify(data),\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      }\r\n    }).then(d => d.json());\r\n    if (response.message=='Email sent successfully')\r\n    {\r\n      setCorrectOtp(response.otp)\r\n      toast.success('OTP Sent Successfully', {\r\n        position: 'top-center',\r\n        style: {\r\n          fontSize: '12px',\r\n          padding: '8px',\r\n          borderRadius: '5px',\r\n        }\r\n      });\r\n    }\r\n    setTimer(60); // Clear the email error when OTP verification starts\r\n  };\r\n\r\n  const handleOtpKeyDown = (e: React.KeyboardEvent<HTMLInputElement>, index: number) => {\r\n    if (e.key === 'Backspace') {\r\n      let newOtp = [...otp];\r\n      newOtp[index] = '';\r\n      setOtp(newOtp);\r\n  \r\n      // Focus the previous input\r\n      const prevSibling = (e.target as HTMLInputElement).previousSibling;\r\n      if (prevSibling && prevSibling instanceof HTMLInputElement) {\r\n        prevSibling.focus();\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleOtpSubmit = () => {\r\n    const enteredOtp = otp.join('');\r\n    if (enteredOtp !== correctOtp) {\r\n      setOtpError(true);\r\n      setOtp(new Array(6).fill('')); // Clear OTP fields\r\n    } else {\r\n      setOtpError(false);\r\n      setOtpVisible(false); // Hide OTP fields\r\n      setEmailVerified(true); // Mark email as verified\r\n      setErrors((prevErrors) => ({ ...prevErrors, email: undefined })); // Clear email error\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (timer > 0) {\r\n      const intervalId = setInterval(() => {\r\n        setTimer((prevTimer) => prevTimer - 1);\r\n      }, 1000);\r\n      return () => clearInterval(intervalId);\r\n    }\r\n  }, [timer]);\r\n\r\n  const validate = () => {\r\n    let valid = true;\r\n    const errors: { fullName?: string; email?: string; password?: string; confirmPassword?: string } = {};\r\n  \r\n    if (!fullName) {\r\n      errors.fullName = 'Full name is required';\r\n      valid = false;\r\n    }\r\n  \r\n    if (!email) {\r\n      errors.email = 'Email is required';\r\n      valid = false;\r\n    } else if (!/\\S+@\\S+\\.\\S+/.test(email)) {\r\n      errors.email = 'Email is invalid';\r\n      valid = false;\r\n    } else if (!emailVerified) {\r\n      errors.email = 'Verify Email first!'; // No specific error message needed here\r\n      valid = false;\r\n    }\r\n  \r\n    if (!password) {\r\n      errors.password = 'Password is required';\r\n      valid = false;\r\n    }\r\n  \r\n    if (password !== confirmPassword) {\r\n      errors.confirmPassword = 'Passwords do not match';\r\n      valid = false;\r\n    }\r\n  \r\n    setErrors(errors);\r\n    return valid;\r\n  };\r\n\r\n  const getPasswordStrengthMessage = () => {\r\n    switch (passwordStrength) {\r\n      case 0:\r\n        return 'Very Weak';\r\n      case 1:\r\n        return 'Weak';\r\n      case 2:\r\n        return 'Fair';\r\n      case 3:\r\n        return 'Good';\r\n      case 4:\r\n        return 'Strong';\r\n      default:\r\n        return '';\r\n    }\r\n  };\r\n\r\n  const getPasswordStrengthColor = () => {\r\n    switch (passwordStrength) {\r\n      case 0:\r\n        return 'text-red-500';\r\n      case 1:\r\n        return 'text-red-500';\r\n      case 2:\r\n        return 'text-yellow-500';\r\n      case 3:\r\n        return 'text-blue-500';\r\n      case 4:\r\n        return 'text-green-500';\r\n      default:\r\n        return '';\r\n    }\r\n  };\r\n\r\n  const handlePasswordFocus = () => {\r\n    setPasswordFocused(true);\r\n  };\r\n\r\n  const handlePasswordBlur = () => {\r\n    if (password === '') {\r\n      setPasswordFocused(false);\r\n    }\r\n  };\r\n\r\n  const handlePasswordChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const password = e.target.value;\r\n    setPassword(e.target.value);\r\n    setPasswordStrength(zxcvbn(password).score);\r\n  \r\n    setErrors((prevErrors) => ({\r\n      ...prevErrors,\r\n      password: undefined, // Clear password error when user starts typing\r\n    }));\r\n  \r\n    if (confirmPassword !== e.target.value) {\r\n      setErrors((prevErrors) => ({\r\n        ...prevErrors,\r\n        confirmPassword: 'Passwords do not match',\r\n      }));\r\n    } else {\r\n      setErrors((prevErrors) => ({\r\n        ...prevErrors,\r\n        confirmPassword: undefined,\r\n      }));\r\n    }\r\n  };\r\n  \r\n  const handleConfirmPasswordChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setConfirmPassword(e.target.value);\r\n    setErrors((prevErrors) => ({\r\n      ...prevErrors,\r\n      confirmPassword: undefined, // Clear confirm password error when user starts typing\r\n    }));\r\n  \r\n    if (password !== e.target.value) {\r\n      setErrors((prevErrors) => ({\r\n        ...prevErrors,\r\n        confirmPassword: 'Passwords do not match',\r\n      }));\r\n    } else {\r\n      setErrors((prevErrors) => ({\r\n        ...prevErrors,\r\n        confirmPassword: undefined,\r\n      }));\r\n    }\r\n  };  \r\n\r\n  const handleInputChange = (setter: React.Dispatch<React.SetStateAction<string>>, field: keyof typeof errors) => (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setter(e.target.value);\r\n    setErrors((prevErrors) => ({\r\n      ...prevErrors,\r\n      [field]: undefined,\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    console.log(validate());\r\n    if (validate()) {\r\n      try {\r\n        setSubmitting(true);\r\n        const data = {\r\n          Username: fullName,\r\n          Email: email,\r\n          password: confirmPassword,\r\n        }\r\n        console.log(data);\r\n        const response = await fetch('/api/auth/signup', {\r\n          method: \"POST\",\r\n          body: JSON.stringify(data),\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          }\r\n        }).then(d => d.json());\r\n        if (response.success) {\r\n          setSubmitting(false);\r\n          toast.success('Successfully created account!', {\r\n            position: 'top-center',\r\n            style: {\r\n              fontSize: '12px',\r\n              padding: '8px',\r\n              borderRadius: '5px',\r\n            }\r\n          });\r\n          router.push('/auth/signin');\r\n        } else {\r\n          setSubmitting(false);\r\n          toast.success(response.message, {\r\n            position: 'top-center',\r\n            style: {\r\n              fontSize: '12px',\r\n              padding: '8px',\r\n              borderRadius: '5px',\r\n            }\r\n          });\r\n        }\r\n      } catch (error) {\r\n        setSubmitting(false);\r\n        toast.error(\"Failed\", {\r\n          position: 'top-center',\r\n          style: {\r\n            fontSize: '12px',\r\n            padding: '8px',\r\n            borderRadius: '5px',\r\n          }\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n\r\n  return (\r\n    <div className=\"flex flex-col min-h-screen md:flex-row\">\r\n      <div className=\"relative w-full md:w-1/2 bg-gray-100\">\r\n        <Image \r\n          src=\"/image1.png\"\r\n          alt=\"Sign Up Image\"\r\n          layout=\"fill\"\r\n          objectFit=\"cover\"\r\n          objectPosition=\"left\" // Keeps the left side in focus\r\n          className=\"absolute inset-0\"\r\n        />\r\n      </div>\r\n\r\n      <div className=\"flex items-center justify-center w-full bg-gray-100 md:w-1/2\">\r\n        <div className=\"w-full max-w-md p-8 bg-white rounded-lg shadow-lg\">\r\n          <h2 className=\"mb-6 text-2xl font-bold text-gray-800\">Sign Up</h2>\r\n          <div>\r\n            {/*Full Name*/}\r\n            <div className=\"mb-4\">\r\n              <label className=\"block text-gray-700\">Full Name</label>\r\n              <input\r\n                type=\"text\"\r\n                value={fullName}\r\n                onChange={handleInputChange(setFullName, 'fullName')}\r\n                className=\"w-full px-3 py-2 border rounded-lg shadow-sm focus:outline-none focus:ring focus:border-blue-300 text-black\"\r\n              />\r\n              {errors.fullName && <p className=\"mt-2 text-sm text-red-500\">{errors.fullName}</p>}\r\n            </div>\r\n            {/*Email*/}\r\n            <div className=\"mb-4\">\r\n              <label className=\"block text-gray-700\">Email</label>\r\n              <input\r\n                type=\"email\"\r\n                value={email}\r\n                onChange={handleEmailChange}\r\n                disabled={otpVisible}\r\n                className=\"w-full px-3 py-2 border rounded-lg shadow-sm focus:outline-none focus:ring focus:border-blue-300 text-black\"\r\n              />\r\n              {errors.email && errors.email !== 'Verify Email first!' && (\r\n                <p className=\"mt-2 text-sm text-red-500\">{errors.email}</p>\r\n              )}\r\n              {errors.email === \"Verify Email first!\" && email && !emailVerified && (\r\n                <div>\r\n                  <p className=\"mt-2 text-sm text-red-500\">{errors.email}</p>\r\n                  <a href=\"#\" onClick={handleOtpVisibility}>\r\n                    <p className=\"mt-2 text-slate-500 hover:underline\">Verify Email with OTP</p>\r\n                  </a>\r\n                </div>\r\n              )}\r\n              {/* {errors.email === '' && (\r\n                <div>\r\n                  <p className=\"mt-2 text-sm text-red-500\">{errors.email}</p>\r\n                  <a href=\"#\" onClick={handleOtpVisibility}>\r\n                    <p className=\"mt-2 text-slate-500 hover:underline\">Verify Email with OTP</p>\r\n                  </a>\r\n                </div>\r\n              )} */}\r\n              {emailVerified && (\r\n                <p className=\"mt-2 text-sm text-green-500\">Verified Email ✓</p>\r\n              )}\r\n              {otpVisible && (\r\n                <div className=\"mt-4\">\r\n                  <div className=\"flex justify-center space-x-2 mb-4\">\r\n                    {otp.map((value, index) => (\r\n                      <input\r\n                        key={index}\r\n                        type=\"text\"\r\n                        maxLength={1}\r\n                        value={value}\r\n                        onChange={(e) => handleOtpChange(e.target, index)}\r\n                        onKeyDown={(e) => handleOtpKeyDown(e, index)}\r\n                        className=\"w-10 px-3 py-2 border rounded-lg shadow-sm focus:outline-none focus:ring focus:border-blue-300 text-black text-center\"\r\n                      />\r\n                    ))}\r\n                  </div>\r\n                  <div className=\"flex justify-center items-center space-x-2\">\r\n                    <button\r\n                      className=\"bg-slate-500 font-semibold text-white py-2 px-4 rounded-lg hover:bg-slate-600 transition duration-300\"\r\n                      onClick={handleOtpSubmit}\r\n                    >\r\n                      {otpButton ? 'OTP Resend' : 'Verify'}\r\n                    </button>\r\n                    <span className=\"text-gray-500\">{timer > 0 ? `Time remaining: ${timer}s` :<button className=\"bg-slate-500 font-semibold text-white py-2 px-4 rounded-lg hover:bg-slate-600 transition duration-300\"\r\n                      onClick={handleResendOtp}>Resend OTP</button>}</span>\r\n                  </div>\r\n                  {otpError && (\r\n                    <p className=\"mt-2 text-sm text-red-500\">OTP is incorrect. Please try again.</p>\r\n                  )}\r\n                </div>\r\n              )}\r\n            </div>\r\n            {/*Password*/}\r\n            <div className=\"mb-4\">\r\n              <label className=\"block text-gray-700\">Password</label>\r\n              <input\r\n                type=\"password\"\r\n                value={password}\r\n                onChange={handlePasswordChange}\r\n                onFocus={handlePasswordFocus}\r\n                onBlur={handlePasswordBlur}\r\n                className=\"w-full px-3 py-2 border rounded-lg shadow-sm focus:outline-none focus:ring focus:border-blue-300 text-black\"\r\n              />\r\n              {errors.password && <p className=\"mt-1 text-sm text-red-500\">{errors.password}</p>}\r\n              {isPasswordFocused && (password.length > 0) &&\r\n                (\r\n                  <p className={`mt-1 text-sm ${getPasswordStrengthColor()}`}>\r\n                    {getPasswordStrengthMessage()}\r\n                  </p>\r\n                )\r\n              }\r\n            </div>\r\n            {/*Conform Password*/}\r\n            <div className=\"mb-4\">\r\n              <label className=\"block text-gray-700\">Confirm Password</label>\r\n              <input\r\n                type=\"password\"\r\n                value={confirmPassword}\r\n                onChange={handleConfirmPasswordChange}\r\n                className=\"w-full px-3 py-2 border rounded-lg shadow-sm focus:outline-none focus:ring focus:border-blue-300 text-black\"\r\n              />\r\n              {errors.confirmPassword && <p className=\"mt-1 text-sm text-red-500\">{errors.confirmPassword}</p>}\r\n            </div>\r\n            {/*Submit Button*/}\r\n            <div>\r\n              <button\r\n                onClick={handleSubmit}\r\n                disabled={isSubmitting || !emailVerified}\r\n                className=\"w-full px-4 py-2 text-white bg-slate-500 rounded-lg shadow hover:bg-slate-600 hover:cursor-pointer focus:outline-none focus:ring focus:ring-blue-300\"\r\n              >\r\n                {isSubmitting?(<><Spinner /></>):emailVerified?(<>Sign Up</>):email?(<>Verify Your Email</>):(<>Sign Up</>)}\r\n                </button>\r\n              {!emailVerified && email && (\r\n                <p className=\"mt-2 text-sm text-red-500\">Please, Verify Email with OTP first!</p>\r\n              )}\r\n            </div>\r\n          </div>\r\n          {/*Sign In Link*/}\r\n          <p className=\"mt-4 text-center text-gray-600\">\r\n            Already have an account?{' '}\r\n            <a href=\"/auth/signin\">\r\n              <span className=\"text-slate-500 hover:underline\">Sign In</span>\r\n            </a>\r\n          </p>\r\n        </div>\r\n      </div>\r\n      <Toaster />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const navItems: any = [];\r\n\r\nexport default SignUpPage;"],"names":[],"mappings":"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"}},
    {"offset": {"line": 772, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}